<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>灵犀一点 Sparkle</title>
 <link href="http://username.github.io/" rel="self"/>
 <link href="http://username.github.io"/>
 <updated>2018-10-15T12:00:48+02:00</updated>
 <id>http://username.github.io</id>
 <author>
   <name>T.Z</name>
   <email>blah@email.test</email>
 </author>

 
 <entry>
   <title>如何在没有Exchange Account选项的Android下添加Office365帐号</title>
   <link href="http://username.github.io/lessons/2018/09/29/exchange-accountandroidoffice365"/>
   <updated>2018-09-29T00:00:00+02:00</updated>
   <id>http://username.github.io/lessons/2018/09/29/exchange-accountandroidoffice365</id>
   <content type="html">
&lt;p&gt;选择Personal IMAP选项&lt;br /&gt;
邮箱地址填入完整含域名的帐号firstname.lastname@company.com 以及密码&lt;/p&gt;

&lt;p&gt;IMAP服务器&lt;br /&gt;
服务器地址写入outlook.office365.com&lt;br /&gt;
port写入993&lt;br /&gt;
Security Type选SSL/TLS&lt;/p&gt;

&lt;p&gt;SMTP服务器&lt;br /&gt;
服务器地址写入smtp.office365.com&lt;br /&gt;
port写入587&lt;br /&gt;
Security Type选TLS&lt;br /&gt;
完工！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>西安旅游散记</title>
   <link href="http://username.github.io/%E6%B8%B8%E8%AE%B0/2018/06/01/"/>
   <updated>2018-06-01T00:00:00+02:00</updated>
   <id>http://username.github.io/%E6%B8%B8%E8%AE%B0/2018/06/</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;姑娘&lt;/h2&gt;

&lt;p&gt;白皙的不像黄种人的姑娘一抓一大把，个个面目精致立体，体态丰腴，个子高挑，显然是高加索人种传世，估计是鲜卑，突厥，匈奴等族裔的基因在表现。&lt;br /&gt;
  仅半天功夫就数次路遇高大丰满的美女，大有盛唐之风。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;态度&lt;/h2&gt;

&lt;p&gt;大西安有自己的骄傲，到什么山上唱什么歌是规矩。地铁里英语报站名，体育馆站不叫stadium station，活生生冒出来Ti-Yu-Guan station让人不禁莞尔。&lt;br /&gt;
  不懂拼音的老外打死也猜不出这些车站因何而名。或许会和我们读翡冷翠，枫丹白露一样，总因些许的异域情调而生出莫名的美感吧。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;传承&lt;/h2&gt;

&lt;p&gt;回民街购物时偶然回头，发现精美砖雕。经问询得知是西安清真大寺。售票口的回族小姑娘戴着头巾，但没有蒙面，陕西口音听起来很亲切。告知外客可入，允许拍照！进门时戴白帽的门岗大爷还友善的给了份宣传册。&lt;br /&gt;
  然后就惊呆了。&lt;br /&gt;
  这里竟然原汁原味，全须全尾的地保存了一座四进中式院落。好多在书中觊觎已久的房屋构件终于完整，原生地汇集于一处，让我几乎泪目。十年浩劫我们亲手毁弃了不知多少汉族自己的文化建筑，感谢倔强的回族同胞为我们守住了这处宝贵的传承。&lt;br /&gt;
  进来参观的除了做礼拜的回民，几乎都是老外，或是如我这般的有缘人。幸甚！&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;震撼&lt;/h2&gt;

&lt;p&gt;兵马俑之于中国人，早已不是一个鲜见的物件。1974年才得以面世的地下军团一经披露便万众瞩目，文字，图像，雕塑，视频，一切传媒渠道都可轻易检索到“兵马俑”这个关键词，几乎可算司空见惯。&lt;br /&gt;
  但真正直面一号坑中那数万栩栩如生整装待发的大秦军士依然让我不由噤声。&lt;br /&gt;
  秦军虎威，千载尤存。&lt;br /&gt;
  从展厅出来，我还在不停感慨帝国雄师。 JP指着拥堵的游人说，这便是依然活着的大军，他们承载着先祖的意志，终将为他们的国度赢得第一的荣耀。中国力量，举世无双。&lt;br /&gt;
  感慨一：当年烧制兵马俑可谓之奇迹，如今从废墟瓦砾中重新淘拣拼接复制还原对抗千年时光，何尝不是奇迹的平方？&lt;br /&gt;
  感慨二：两千多年过去了，我们的镀铬防锈依然沿袭古制，金属表链的扣环和青铜车马上的结构如出一辙，是祖先太优秀，还是我们太不思进取？&lt;br /&gt;
  小疑问：不是说军马都木有小鸡鸡么，青铜车马那四匹马后腿之间夹得什么东西？&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;古今&lt;/h2&gt;

&lt;p&gt;大西安有自己的骄傲，到什么山上唱什么歌是规矩。地铁里英语报站名，体育馆站不叫stadium station，活生生冒出来Ti-Yu-Guan station让人不禁莞尔。
  不懂拼音的老外打死也猜不出这些车站因何而名。或许会和我们读翡冷翠，枫丹白露一样，总因些许的异域情调而生出莫名的美感吧。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;态度&lt;/h2&gt;

&lt;p&gt;大西安有自己的骄傲，到什么山上唱什么歌是规矩。地铁里英语报站名，体育馆站不叫stadium station，活生生冒出来Ti-Yu-Guan station让人不禁莞尔。
  不懂拼音的老外打死也猜不出这些车站因何而名。或许会和我们读翡冷翠，枫丹白露一样，总因些许的异域情调而生出莫名的美感吧。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>红米1s运行lineageOS音乐播放问题修正</title>
   <link href="http://username.github.io/lessons/2017/12/21/1slineageos"/>
   <updated>2017-12-21T00:00:00+01:00</updated>
   <id>http://username.github.io/lessons/2017/12/21/1slineageos</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;问题概述&lt;/h2&gt;

&lt;p&gt;红米1s运行LineageOS已经有一段时间了，这样一个搭配完美满足所有工作需求。唯一让我不满的问题出现在娱乐需求方面：在播放内置音乐文件的时候（我使用的是海贝播放器），如果插入耳机线，并且熄屏，会出现随机时长后声音中断的现象，点亮屏幕会发现依然处于播放状态，但耳机里就是没声音；不定时长后（无论熄屏亮屏）声音会重新恢复，乐曲内容连贯，没有跳过一段的感觉。这一点有别于单纯的系统静音。&lt;br /&gt;
  但同样用海贝播放器，如果使用手机喇叭外放，则完全没有中断的情况，蓝牙耳机也播放正常。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;问题分析&lt;/h2&gt;

&lt;p&gt;开始以为是省电模式把后台进程干掉了，专门到开发者模式调高了后台进程许可数量。无效。再到论坛上溜达，发现不少人提到LOS与谷歌热词探测（hotword detection）服务冲突。偏偏我装得全家桶是极简版（pico version），根本没有关闭这项服务的入口。只好遵循&lt;a href=&quot;http://www.lineageosdownloads.com/get-google-assistant-lineage-os/&quot;&gt;这篇&lt;/a&gt;教程刷了遍机，然后到服务参数中关闭语音检测（顺便提一句，ok google这个功能真的挺带感的）。&lt;br /&gt;
  然而，问题依旧。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;解决方案&lt;/h2&gt;

&lt;p&gt;真正奏效的方案是在&lt;a href=&quot;https://forum.xda-developers.com/mi-5/help/lineageos-14-1-problem-headphones-sound-t3633885&quot;&gt;这个网页&lt;/a&gt;上找到的，据说是LOS与小米系统之间的一个配合bug，解决方案简单说来就是&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;进TWRP&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;wipe dalvik + cache&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;安装miui（我是从小米官网下的miui8）&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;wipe dalvik + cache&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;安装LOS&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;wipe dalvik + cache&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;重启&lt;/code&gt;&lt;br /&gt;
亲测有效。&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>使用powershell远程控制windows服务器</title>
   <link href="http://username.github.io/lessons/2017/10/03/powershellwindows"/>
   <updated>2017-10-03T00:00:00+02:00</updated>
   <id>http://username.github.io/lessons/2017/10/03/powershellwindows</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;在UAC还没有出现的年代，windows环境下远程命令调用大约只有PSTools一条路可走，但无可否认的是这条路顺畅无比，长久以来我们使用的自动化脚本都是以此为基石的。&lt;br /&gt;
  然后美好时光结束了。&lt;/p&gt;

&lt;p&gt;最近要在一个非AD环境下实现远程命令调用，操作系统是Server 2008 R2和Windows 7。尽管下载了号称匹配Srv2008的PSTools （v2.45），我依然悲伤的发现童话都是骗人的。&lt;br /&gt;
  于是Powershell成了唯一的选择。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;准备工作&lt;/h2&gt;

&lt;h3 id=&quot;section-2&quot;&gt;网络类型&lt;/h3&gt;

&lt;p&gt;在非AD环境下，各机器处于WorkGroup环境。为了实现winrm的远程调用，需要将网络类型设定为&lt;code&gt;私有&lt;/code&gt;。修改方法多样，可以直接点击修改，也可以不怕麻烦的到注册表下&lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetwarkList\Profiles\XX&lt;/code&gt;项目中，设定DWORD类型变量 Category =&amp;gt;1， CategoryType=&amp;gt;0。其中XX对应当前网络连接名称。&lt;/p&gt;

&lt;h3 id=&quot;powershell&quot;&gt;Powershell的脚本执行许可&lt;/h3&gt;

&lt;p&gt;默认的powershell脚本是不可执行的，需要以管理员权限打开powershell端口（这个设定适用于以后所有的powershell命令），键入命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set-executionpolicy remotesigned  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;section-3&quot;&gt;防火墙开口子&lt;/h3&gt;

&lt;p&gt;有时会发现远程测试命令&lt;code&gt;test-rsman  A的IP&lt;/code&gt;  怎么都过不去，多数情况是被墙了。解决方案是执行如下命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;winrm quickconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会添加一个例外规则到防火情上。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;配置各机器&lt;/h2&gt;

&lt;p&gt;服务器设为A，操作端设为B。&lt;/p&gt;

&lt;h3 id=&quot;a&quot;&gt;A方配置&lt;/h3&gt;

&lt;p&gt;输入命令检测&lt;code&gt;winrm&lt;/code&gt;服务的运行状态&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;get-service winrm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果是running，继续键入&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;enable-psremoting -force
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以许可远程控制本地程序。&lt;/p&gt;

&lt;h3 id=&quot;b&quot;&gt;B方配置&lt;/h3&gt;

&lt;p&gt;关键点在于添加远程机器到信任名单中，方法1是在具有Admin权限的cmd窗口录入&lt;code&gt;winrm set winrm/config/client @{TrustedHosts=”A的IP”}&lt;/code&gt;，方法2是据说这个命令同样可以在具有admin权限的powershell中执行，方法3是powershell窗口录入&lt;code&gt;Set-Item WSMan:\localhost\Client\TrustedHosts -Value &quot;A的IP&quot; -Force&lt;/code&gt;。 注意，为了可以许可所有机器，参数&lt;code&gt;A的IP&lt;/code&gt;可以用通配符&lt;code&gt;*&lt;/code&gt;代替。&lt;br /&gt;
  检验方法是&lt;code&gt;Get-Item WSMan:\localhost\Client\TrustedHosts&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;x80070005&quot;&gt;0x80070005报错&lt;/h4&gt;

&lt;p&gt;在设定信任名单时有可能会遇到这个报错，解决方法是到注册表下&lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System&lt;/code&gt;项目中，设定DWORD类型变量LocalAccountTokenFilterPolicy =&amp;gt;1&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;脚本研究&lt;/h2&gt;

&lt;p&gt;远程命令执行当然要用&lt;code&gt;invoke-command&lt;/code&gt;指令，同时为了避免每次重新输入用户名密码，可以采用特殊格式预设定登录信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$Username = &#39;username&#39;
$Password = &#39;password&#39;
$pass = ConvertTo-SecureString -AsPlainText $Password -Force
$Cred = New-Object System.Management.Automation.PSCredential -ArgumentList $Username,$pass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后用Credential参数调用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Invoke-Command -ComputerName A的IP -Credential $Cred -ScriptBlock{set-date &quot;猴年马月&quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;windowslinux&quot;&gt;Windows环境下对于Linux脚本的远程调用&lt;/h2&gt;

&lt;p&gt;这个技能在powershell出现之前就存在了，幸运的是powershell同样支持在脚本中混杂这个命令，一个ps1文件就可以全包括。&lt;br /&gt;
  具体的说，需要通过putty内置的plink.exe调用ssh，呼叫linux下的预定script，完整的命令是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PLINK.EXE -ssh  C的用户名@C的IP -pw C的密码 /home/YY/脚本.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在Linux中，如果想用sudo级别的命令又不想费事输入密码的，可以使用如下方案：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo -e &quot;sudo的密码\n&quot; | sudo service ZZ restart
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-6&quot;&gt;脚本的视窗化&lt;/h2&gt;

&lt;p&gt;为了方便传统windows用户（习惯双击鼠标左键），可以设定一个快捷方式到这个脚本；另外为方便检视运行结果，使用参数-NoExit保留powershell窗口。 完整命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;powershell -NoExit &quot;c:\脚本.ps1&quot;
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>红米RedMI1S刷机：强大的Lineage OS</title>
   <link href="http://username.github.io/lessons/2017/08/30/android-lineage-os"/>
   <updated>2017-08-30T00:00:00+02:00</updated>
   <id>http://username.github.io/lessons/2017/08/30/android-lineage-os</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;缘起&lt;/h2&gt;

&lt;p&gt;当初赫然发现小米品牌可以用一部iPhone手机的钱买一堆手机便义无反顾的扎到了小米阵营。那时红米刚刚推出，一气订了四部给家里的老人。年初的时候岳父岳母换话费套餐，顺便买了两部华为，于是红米便被闲置了。&lt;/p&gt;

&lt;p&gt;自已的Mi3虽然已经进化到MIUI8，但Android版本依然停留在6，对棉花糖垂涎已久，于是决定刷一部红米，代替目前还是功能机的工作手机。&lt;/p&gt;

&lt;p&gt;然后知道了Lineage OS（很多时候简写LOS），竟然对红米RedMi1S这种古董机型都提供系统维护，没二话，就它了。&lt;/p&gt;

&lt;p&gt;说一句题外话，红米RedMi1S这部手机的配置其实相当靠谱，性价比颇高，在欧洲这边很受追捧。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;准备工作&lt;/h2&gt;

&lt;p&gt;在LOS官网下载了最新版本（14.1 nightly）的系统镜像，大致滤一遍教程：手头现成就有Android的SDK，软件环境的构建没有难度。倒是硬件方面有几个步骤不能省。&lt;/p&gt;

&lt;p&gt;首先到设置-&amp;gt;关于-&amp;gt;MIUI版本上连击7下，开启&lt;code&gt;开发者模式&lt;/code&gt;；然后进入该模式，开启&lt;code&gt;ADB调试模式&lt;/code&gt;以及&lt;code&gt;许可调试信息窗口弹出&lt;/code&gt;两个选项，再连接电脑时会在手机端显示是否许可MAC地址为特定值的确认窗口。选择允许。这样涉及刷内核的命令才有可能被执行。这中间还必须登陆一下小米账户，告诉小米官方这台机器将进入ADB调试许可模式。估计是为了在数据库取消售后联保，毕竟刷机风险是应当由用户自己承担的。&lt;/p&gt;

&lt;p&gt;这里表扬一下Ubuntu，插上红米adb直连，驱动已经内置！对比windows上四处找驱动，甚至要借助豌豆荚之类第三方，简直弱爆了。&lt;/p&gt;

&lt;p&gt;为了刷内核，还要有一个预启动系统，类似与PC端的bios，LOS给出了TWRP的连接，找到匹配机器的最新版本，下载。&lt;/p&gt;

&lt;p&gt;另外为了root，还要有su预制包，一并下载到本地；加上气象信息提供源，至此，四个软件包准备完毕。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;安装&lt;/h2&gt;

&lt;p&gt;2017-12-21 部分更正：因为是凭记忆写的安装过程，有几步其实是错误或至少是不完整的，特此更正。&lt;/p&gt;

&lt;p&gt;命令行执行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;adb reboot bootloader
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;实现重启到fastboot界面，这个命令等效于在关机状态下按着音量减+电源进行启动。在fastboot界面下可以使用fastboot命令与手机交互，但有时会提示无权限，这时需要前缀sudo&lt;/p&gt;

&lt;p&gt;因为第一次刷，还要解锁&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fastboot oem unlock
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;音量键选择，开关键确认。&lt;/p&gt;

&lt;p&gt;然后刷入TWRP&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fastboot flash recovery twrp-XX.img
fastboot reboot-bootloader 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从而切换到TWRP引导系统。进而实现安装su.zip。这一步的等效操作是在fastboot界面下长按音量增+电源。&lt;/p&gt;

&lt;p&gt;注意在进入TWRP后再传递压缩文件（其实此前传递也行，但有时需要wipe，则数据不保，所以进入后再传递万无一失）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;add push SuperSu.zip /sdcard
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-3&quot;&gt;体验&lt;/h2&gt;

&lt;p&gt;因为是副机，加之明确自己的配置在四年前都不算主流，所以根本没有装吃资源的东西。安装软件如下：&lt;code&gt;google全家桶之Pico版&lt;/code&gt;（目测仅包含google服务框架和Play Store），&lt;code&gt;谷歌键盘&lt;/code&gt;，&lt;code&gt;Skype Entreprise&lt;/code&gt;， &lt;code&gt;ES Explorer&lt;/code&gt;, &lt;code&gt;Yahoo天气服务&lt;/code&gt;，以及&lt;code&gt;迅飞输入法&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;其他的应用全部使用系统内置的版本，然后发现这是一个完成度非常高的版本&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;FM Radio可用，且自动显示相关信息（电台名称，当期节目名称，起始时间等）&lt;/li&gt;
  &lt;li&gt;相机可用，前后镜头都可以&lt;/li&gt;
  &lt;li&gt;呼吸灯可用，支持自定义色彩&lt;/li&gt;
  &lt;li&gt;通话质量优秀，与MIUI相比没有显著差异&lt;/li&gt;
  &lt;li&gt;信号强，貌似胜过MIUI&lt;/li&gt;
  &lt;li&gt;出奇的省电，第一次充电后坚持了4天！！！（有截图为证）
&lt;img src=&quot;/img/Screenshot_20170830-100045.png&quot; alt=&quot;RedMi1S_LineageOS&quot; title=&quot;红米1s在LOS系统下的耗电情况&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-4&quot;&gt;结论&lt;/h2&gt;

&lt;p&gt;作为副机，足够我再用四年&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>OVH托管ESXi服务器环境下如何安装guest machine</title>
   <link href="http://username.github.io/2016/11/27/ovh-hosting-esxi-server-add-guest-machine"/>
   <updated>2016-11-27T00:00:00+01:00</updated>
   <id>http://username.github.io/2016/11/27/ovh-hosting-esxi-server-add-guest-machine</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;先决条件&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;MAC + IP failover&lt;/strong&gt;&lt;br /&gt;
 托管环境下是没有dhcp服务的，所以必须首先确定guest系统的ip，否则没有网络连接。
 系统镜像上传到datastore。这里选择Ubuntu v16 LTS x64。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;安装步骤&lt;/h2&gt;
&lt;p&gt;启动vShere Client， 配置guest， 修改参数，找到网络适配器，手动修改MAC地址。&lt;br /&gt;
 之后启动guest，一路安装，会告知无法侦测dhcp，手动配置ip&lt;br /&gt;
 填写IP failover作为地址和gatewey，mask为24，dns选取OVH统一地址：&lt;br /&gt;
  &lt;strong&gt;213.186.33.99&lt;/strong&gt;&lt;br /&gt;
  安装结束后重启，发现依然无法上网，需要继续修改/etc/network/interface文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	#The loopback network interface  
	auto lo  
	iface lo inet loopback  
	#The primary network interface  
	auto eth0  
	iface eth0 inet static  
		address XX  
		netmask 255.255.255.255  
		broadcast XX  
		post-up route add YY dev eth0  
		post-up route add default gw YY  
		pre-down route del YY  
		pre-down route del default gw YY  
		dns-nameservers 213.186.33.99  
		dns-search ovh.net  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注释：&lt;br /&gt;
  *XX	:guest获取的IP failover&lt;br /&gt;
  *YY		:ESXi的gatewey&lt;/p&gt;

&lt;p&gt;关于后者的获取，需要到vSphere Client，Host的设置标签页，DNS与路由选项，对应VMKernel 的地址&lt;/p&gt;

&lt;p&gt;期间一个小插曲，在interface文件中我发现历来是eth0的网卡名被设定成ens160，让人感觉很不爽， 于是查询真实属性&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dmesg | grep -i eth
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;发现被重命名了，
于是进入到grub文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo vi /etc/default/grub
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改GRUB_CMDLINE_LINUX行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GRUB_CMDLINE_LINUX=&quot;net.ifnames=0 biosdevname=0&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后重新生成引导文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo grub-mkconfig -o /boot/grub/grub.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启，世界美好了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>黑爵AJAZZ机械键盘AK33S上手体验</title>
   <link href="http://username.github.io/%E6%84%9F%E6%85%A8/2016/07/05/ajazz-ak33s-review"/>
   <updated>2016-07-05T00:00:00+02:00</updated>
   <id>http://username.github.io/%E6%84%9F%E6%85%A8/2016/07/05/ajazz-ak33s-review</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;背景&lt;/h2&gt;

&lt;p&gt;现役两把机械键盘都是国外品牌， 一把cherry原厂清轴clear switch， 一把corsair红轴red switch。手感各有千秋。 后来看到国产机械键盘几乎是前者折半以下的价格销售，不由得开始长草。&lt;br /&gt;
鉴于现有两个键盘一个是full sized （104 keys)， 一个是compact size ( 88 keys )，为避免重复投资，目标转向mini size （82 keys) 。&lt;br /&gt;
这样一来Vortex Poker布局的键盘成为了首选。&lt;br /&gt;
然后发现了国产品牌黑爵AJazz推出的AK33S。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;卖点&lt;/h2&gt;

&lt;p&gt;对背光其实完全零需求，那个东西太幼稚。 真正吸引我的还是布局–这个尺寸和键盘布局实在太好了，几乎不可以再小了，而基本功能又都照顾到了：尤其值得点赞的是右侧的一竖列Home, PgUp,PgDn,End，比poker还贴心－用拼音输入法的人应当了解其重要性。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;体验&lt;/h2&gt;

&lt;p&gt;上手打字后有几个体验：&lt;br /&gt;
一是国产轴blue switch声音好尖锐啊，相比之下clear switch 和 red switch音量也许差不多，但音调更低沉，因而扰邻现象缓和得多（red switch基本与薄膜键盘持平），这种哒哒哒的声音大概只有当初敲机械打字机Typewriter时听到过。&lt;br /&gt;
二是黑爵这款产品的品控和大厂还有差距，例如Fn键和字母键录入声音都有差别，例如脚撑太松在包里就脱落了，例如塑料基座与顶层铝板接缝处的切削面明显有豁口。&lt;br /&gt;
三是软件系统有待提升，从官网上下载的驱动在win8.1 x64系统下安装后竟然识别不出已经连接的键盘，所以这个驱动有什么功能不得而知。&lt;/p&gt;

&lt;h2 id=&quot;azerty&quot;&gt;Azerty改造&lt;/h2&gt;

&lt;p&gt;买回来后一直没有当作生产力设备，最大的原因在于悲催的缺键！这是当初购买时完全没有料到的问题。&lt;br /&gt;
因为面对中国市场，键盘采用英美Qwerty排列。以前一直没有发觉，在这样的排列下，左手shift键是长长一条；而在法文键盘Azerty或德文键盘Qwerty DE排列中，左手shift键是短键帽，其右侧是&amp;lt;键。作为一个程序员，这个符号实在不能少。&lt;br /&gt;
解决方法一是沿用Qwerty排列，但手速立刻跌得离谱–没办法，这么多年已经习惯Azerty了。&lt;br /&gt;
解决方法二是修改系统KeyMap。具体的说就是在Qwerty键盘上找一个替换按键，将之重新定义为&amp;lt;键。&lt;/p&gt;

&lt;p&gt;这里介绍一下方法二的实现。  &lt;br /&gt;
我选择了数字行最左侧的œ键。&lt;/p&gt;

&lt;h3 id=&quot;linux&quot;&gt;linux系统&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;找到keycode，在Terminal下启用xev程序监听键盘输入，查知&amp;lt;键的keycode是94，而œ键的keycode是49。&lt;/li&gt;
  &lt;li&gt;使用
&lt;code&gt;
  xmodmap -pke
&lt;/code&gt; 
 命令，查阅机器当前key maping&lt;/li&gt;
  &lt;li&gt;创建一个对掉表文件，内容是&lt;br /&gt;
  keycode 49 = less greater less greater bar brokenbar bar  &lt;br /&gt;
  keycode 94 = oe OE oe OE leftdoublequotemark rightdoublequotemark leftdoublequotemark&lt;/li&gt;
  &lt;li&gt;加载这个映射表
&lt;code&gt;
  xmodmap ~/.Xmodmap
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;windows&quot;&gt;windows系统&lt;/h3&gt;

&lt;p&gt;windows下， 同样以œ键为目标。奇葩的是在法语键盘布局下这个键被识别为²，我感觉整个儿人都方了&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;下载微软自家的Microsoft Keyboard Layout Creator， 安装，启动&lt;/li&gt;
  &lt;li&gt;加载法语布局File=&amp;gt; Load Existing Keyboard =&amp;gt;Français&lt;/li&gt;
  &lt;li&gt;创建自定义布局：单击左上角那个键，在弹出窗口点All按钮，之后&amp;lt;Key&amp;gt; 输入
&lt;code&gt;
U+003c
&lt;/code&gt;
,shift+&amp;lt;Key&amp;gt;输入 
&lt;code&gt;
U+003e
&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;编译，生成一个适应32/64位系统的安装包，懒人可以直接从
&lt;a href=&quot;http://ztba.github.io/img/fr_nv.7z&quot;&gt;这里&lt;/a&gt;
下载&lt;/li&gt;
  &lt;li&gt;安装新布局，在输入法中选定刚才编译出来的Français - Switch布局，之后重启（必需的）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;然后就可以愉快的输入&amp;lt;符号了（防呆提示，欲输入&amp;gt;符号需按shift键）。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;结论&lt;/h2&gt;

&lt;p&gt;黑爵这款键盘手感上强于普通薄膜键盘，但和原厂轴比较依然有差距（做工，噪音），压力数介于清轴与红轴之间（我只用过这两个），造型很酷，布局贴心，性价比无敌。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>老树新芽装Debian</title>
   <link href="http://username.github.io/skills/2016/02/28/debian"/>
   <updated>2016-02-28T00:00:00+01:00</updated>
   <id>http://username.github.io/skills/2016/02/28/debian</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;缘起&lt;/h2&gt;

&lt;p&gt;家里一台Sony VAIO VGN-B1VP 始终闲置，说起来还是我第一台工作电脑，因为良好的使用习惯，至今没什么硬件故障。第一代centrino，1.6GHz CPU, 1.5GB 内存，80G 5400rpm的硬盘。大约是先入为主，始终觉得这个薄膜键盘手感要好过另一台IBM R51。当然原机配套的XP早就过期了，这么老的配置跑win10实在勉强，但linux还是绰绰有余的，于是决定重装系统。&lt;/p&gt;

&lt;p&gt;开始选择的是ubuntu。为了快速安装，把硬盘卸下来接IDE=&amp;gt;usb转接器插到台式机上，
  用vmware灌装了14.04 LTS x86（无意中绕过了一个先天限制，这是后话）。然后装回笔记本，欢天喜地的启动了。&lt;/p&gt;

&lt;p&gt;之后了两天一直正常使用，直到一次例行的升级之后，赫然报错：内核硬件不支持！
  Kernel requires features not present on the CPU: PAE&lt;/p&gt;

&lt;p&gt;这才意识到大内存时代已经来了很久了。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;具体的解释如下：&lt;/h3&gt;

&lt;p&gt;从Ubuntu 12.04开始，尽管是32位的操作系统，依然以cpu支持PAE（支持内存大于4Go的特性）为前提，否则是不可能安装的。偏偏我的安装过程绕过了这个验证（台式机装置的是i7 CPU），所以一直运行了这么几天。但升级内核的时候又要面对PAE检验，这次绕不过去了。&lt;/p&gt;

&lt;p&gt;虽然顶个红叉不耽误使用，但不能升级，不能安装新软件实在无法接受。
  于是开始做功课：老机器上可以跑什么系统。
  发现了这么一个&lt;a href=&quot;http://linuxpasapas.blog.free.fr/index.php?post/2015/08/14/linux_requirements_non-pae&quot;&gt;列表&lt;/a&gt;。可以看出，只有Debian还在维持最新版本的non-pae支持。&lt;/p&gt;

&lt;p&gt;业界良心。&lt;/p&gt;

&lt;p&gt;下载net安装镜像，最小安装(具体过程可以参考另外一篇&lt;a href=&quot;http://ztba.github.io/lessons/2014/12/15/debian&quot;&gt;最小安装上网用Debian&lt;/a&gt; )
  之后添加xfce4桌面，以及顺手的软件：tilda, scite, fcitx, sunpinyin, chrome，nautilus
  然后进入图形窗口，遇到一连串的问题。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;声音&lt;/h2&gt;

&lt;p&gt;明明已经安装了xfce4-mixer gstreamer0.10-alsa， 在命令行进入 alsamixer 调节了PCM音量，偏偏音量图片下打着红叉。使用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lspci | grep Audio
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;命令查看音频硬件情况， 依然没什么进展。 貌似还使用了&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo alsactl init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;命令，也没什么用处。
  后来在某论坛里发现一个奇葩方案：在Audio mixer=&amp;gt;Control里勾选External Amplifier, 表示要让声音外放。 然后就出声了。&lt;/p&gt;

&lt;h2 id=&quot;flash&quot;&gt;flash&lt;/h2&gt;

&lt;p&gt;要使用pepperflashplugin-nonfree插件，需要添加apt源&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://ftp.fr.debian.org/debian/ jessie main contrib non-free  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install pepperflashplugin-nonfree
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就没问题了&lt;/p&gt;

&lt;h2 id=&quot;wifi&quot;&gt;wifi&lt;/h2&gt;

&lt;p&gt;一开始都没有发现无线网卡的存在，祭出lspci大法：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lspci | grep -i wireless
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;发现是intel 2200BG卡，使用如下命令安装驱动
（前提是已经添加了contrib 作为apt源）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install firmware-ipw2x00 wireless-tools iwconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;依然找不到无线网络
使用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cat /etc/udev/rules.d/70-persistent-net.rules 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看, 发现无线网卡被命名为eth1，改成wlan&lt;/p&gt;

&lt;p&gt;使用sudo ifconfig wlan up挂载网卡，出现
rf-kill block 报错。
键入命令sudo rfkill list检查，发现无线网卡被软封锁。
键入命令sudo rfkill unblock all解锁。&lt;/p&gt;

&lt;p&gt;但这个时候依然无法进行wifi连接，
安装自动化网络设置软件 network-manager
注意，因为彼此的排它性，此前要卸载wicd wifi-radar connman。&lt;/p&gt;

&lt;p&gt;同时安装xfce4显示插件和gui&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install network-manager xfce4-indicator-plugin network-manager-gnome
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后可以愉快的上网了&lt;/p&gt;

&lt;h2 id=&quot;floppy&quot;&gt;floppy&lt;/h2&gt;

&lt;p&gt;因为是在vmware下安装，默认的配置里竟然还有软驱。启动桌面后就堂而皇之的摆在桌面，尽管这个东西根本就不存在。删除的方法是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo scite /etc/modprobe.d/fbdev-blacklist.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后一行添加 blacklist floppy&lt;/p&gt;

&lt;p&gt;或者更优雅的使用管道&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &quot;blacklist floppy&quot; | sudo tee /etc/modprobe.d/fbdev-blacklist.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后执行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo rmmod floppy &amp;amp;&amp;amp; sudo update-initramfs -u
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;软驱图标就这样消失了&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;文字处理环境&lt;/h2&gt;

&lt;p&gt;这个老笔记本主要的用途就是上网和码字，所以前面那些都是预备，真正生产环境现在开始配置。&lt;/p&gt;

&lt;p&gt;首先需要git，以便管理版本；之后是jekyll系统，用以运行博客；最后要latex系统，可以出品格式文章。&lt;/p&gt;

&lt;p&gt;结果，git安装顺利，jekyll安装耗时巨大，但也都顺利（首先安装rvm, 然后从rvm安装openssl，再重装一次rvm，然后使用rvm提供的gem安装jekyll）&lt;/p&gt;

&lt;p&gt;运行jekyll server的结果是有些网页没有套上css, debug后发现是jekyll升级， 需要修改_config.xml中对于ASSET_PATH的定义。&lt;/p&gt;

&lt;p&gt;安装latex旷日持久，但绝对必备。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install texlive-full
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此，笔记本满血复活。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>PS3蓝牙键盘上手</title>
   <link href="http://username.github.io/%E6%84%9F%E6%85%A8/2016/01/07/ps3"/>
   <updated>2016-01-07T00:00:00+01:00</updated>
   <id>http://username.github.io/%E6%84%9F%E6%85%A8/2016/01/07/ps3</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;背景&lt;/h2&gt;

&lt;p&gt;早就发现google的docs系统是个好东西，基本上可以取代微软office系列。更牛的是这样的应用可以在android上展开，于是给tablet装备一个工作环境就变得有意义起来。于是就对蓝牙键盘开始上心。
  于是在打折季发现了这个仅售8欧的sony PS3蓝牙键盘，内置指点棒，鼠标键盘在一起，性价比无敌了。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;要点记录&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;匹配过程：同时按下Fn+Inser+PS键（右下角那个Playstation的标志），红灯快闪，进入匹配模式。红灯恒亮则链接稳定。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;windows按键： 毕竟是给sony自家游戏机准备的，不可能打个大大的窗口图标。其实这个键是存在的，方块键（左手Fn右边和右手Alt Gr右边）！&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;手感&lt;/h2&gt;

&lt;p&gt;键帽是全尺寸的，所以适应过程还算理想。此外大写键附带LED指示，有没有开大写不用猜了。这一点比相当一批脑残的蓝牙键盘高明。&lt;/p&gt;

&lt;p&gt;因为没有pgup pgdown home end等按键，有需求时就用指点棒吧，反正不远。 但仅仅用来打字是足够了，虽然比不上IBM ThinkPad小红点那么灵敏，至少一般性的操作还是可以的，可惜只有左右键，没有中键。&lt;/p&gt;

&lt;p&gt;目前尝试的结果还算满意，没有发现太严重的漏字现象（网上吵得很凶的品控问题），只是蓝牙不同于usb直连，感觉上还是有滞后的。然后就是需要适应手感，毕竟是超小型键盘，布局和传统键盘是不一样的。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;补充：多个设备匹配切换&lt;/h2&gt;

&lt;p&gt;起初和单位pc 做了匹配，回家后希望跟tablet 重新匹配：想想也是，堂堂Nexus 7竟然没有专属键盘，实在可恨。然后按照验证过的方法，同时按下Fn+Inser+PS键，竟然无法被识别。&lt;/p&gt;

&lt;p&gt;狠狠失望了一把。&lt;/p&gt;

&lt;p&gt;再仔细想了想，发现我呆了：键盘自己还记得是跟pc 连好吧，再出现别的设备都被无视了。根据关机时领悟的经验，长按和短按是截然不同的反应，于是还是那三个组合，一直按下去。指示灯由闪烁变成了熄灭，想必上一次的设置已被清空。于是重新按连接组合键，tablet 随即发现新硬件，申请连接，键入验证码，一切正常了！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>上手Xbox One</title>
   <link href="http://username.github.io/%E6%84%9F%E6%85%A8/2015/12/25/xbox-one"/>
   <updated>2015-12-25T00:00:00+01:00</updated>
   <id>http://username.github.io/%E6%84%9F%E6%85%A8/2015/12/25/xbox-one</id>
   <content type="html">
&lt;p&gt;游戏背景： 一直停留在单机游戏的阶段，算是个超轻度游戏者。&lt;/p&gt;

&lt;p&gt;联网对战，网游，手游，一概停留在概念阶段。倒是体验过几次主机游戏。
  对自wii以来的体感游戏一直印象颇佳，于是在黑五入手了Xbox One+Kinect。&lt;/p&gt;

&lt;h2 id=&quot;xbox-one&quot;&gt;Xbox One答疑&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;网络接口&lt;/p&gt;

    &lt;p&gt;从照片上看只有Rj45口，一直在犹豫如何布网。因为家里是wifi环境，当时有几个疑问：能不能断网游戏？如果用wifi，一定要用微软专卖的那个无线适配器么？如果不是，怎么装驱动，或者有哪些compatible的无线网卡？&lt;/p&gt;

    &lt;p&gt;现在自己有了答案。&lt;/p&gt;

    &lt;p&gt;第一个问题答案是可以，但要到初始化之后。一开始直接插到电视上，以为像录像机一样可以静等开机画面，没想到竟然黑屏。不得已拿回书房，插上网线，才进入初始化界面。&lt;/p&gt;

    &lt;p&gt;第二个问题答案是Xbox自带无线网卡，而且支持5G频段，所以wifi环境可用，第三个问题不再成立。&lt;/p&gt;

    &lt;p&gt;事实上网上买的那个Xbox One配套的wifi适配器不是用来给Xbox自己上网用的，而是安装之后可以在运行于Windows10的PC端读取Xbox主机的流媒体，实现电脑上玩Xbox游戏的功能。&lt;/p&gt;

    &lt;p&gt;需要强调的是设置无线是在有线连接的基础之上的，需要到设置选项里操作。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;外接设备&lt;/p&gt;

    &lt;p&gt;Xbox共有三个usb口，鉴于手柄挑字输入实在太慢，顺手插上家里闲置的Microsoft Wireless Keyboard 2000无线键盘，竟然免驱动运行，包括左上方主界面快捷键都完美运行，等效于手柄上的圈叉键。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;软件环境&lt;/p&gt;

    &lt;p&gt;目前为止没有发现文件浏览器，所以对NAS读取基本绝望。倒是内置了微软自家的Edge，普通网页图文浏览没有问题，遗憾的是不可以装flash plugin， 造成了相当一批在线视频无法观看。&lt;/p&gt;

    &lt;p&gt;目前还在摸索如何装Chrome或Firefox，毕竟是windows10的操作系统。这个部分随后补充。&lt;/p&gt;

    &lt;p&gt;装了Skype，配合Kinect使用感觉很惊艳：摄像头竟然会自动调焦变焦，跟踪主体行动。图像质量也属于顶级。Kinect这个摄像头无愧行业领先地位。&lt;/p&gt;

    &lt;p&gt;补充2：&lt;/p&gt;

    &lt;p&gt;关于读取局域网资源，倒是发现了一个折衷方案。到商城应用里下载media player，启动后选择相应的网段，可以自动搜索网上的无密码保护共享资源，包括音频，视频和图像。可惜视频方面解码是个问题，而且无法加载字幕。&lt;/p&gt;

    &lt;p&gt;补充3：&lt;/p&gt;

    &lt;p&gt;偶然发现Xbox One的手柄竟然还能用在PC上，只要连一根micro USB的线。话说现在micro USB已经成了手机充电标准接口， 区区一根信号线简直零成本–家里面闲置了一堆。&lt;/p&gt;

    &lt;p&gt;在Windows 7 x64系统上安装驱动，要到 &lt;a href=&quot;http://support.xbox.com/en-CY/xbox-on-windows/accessories/connect-xbox-one-controller-to-pc&quot;&gt;微软官网&lt;/a&gt; 下载。 一路点下一步，很快装完了。 然后手柄依然无法被识别。圈叉键始终闪烁，设备管理器上也是一个惊叹号。&lt;/p&gt;

    &lt;p&gt;开始上网做功课，最后发现有两个依赖升级包必须装：&lt;/p&gt;

    &lt;p&gt;Update for User-Mode Driver Framework version 1.11 for Windows 7 for x64-based Systems &lt;a href=&quot;https://www.microsoft.com/en-us/download/confirmation.aspx?id=38421&quot;&gt;KB2685813&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;以及&lt;/p&gt;

    &lt;p&gt;Update for Kernel-Mode Driver Framework version 1.11 for Windows 7 for x64-based Systems &lt;a href=&quot;https://www.microsoft.com/en-us/download/confirmation.aspx?id=38423&quot;&gt;KB2685811&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;安装完毕后重启，手柄在进入Windows瞬间会震动，表明完全安装成功。&lt;/p&gt;

    &lt;p&gt;不过如果要回过头再用到Xbox One上，还需要再进行一次无线匹配。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;xbox-one-1&quot;&gt;Xbox One游戏体验&lt;/h2&gt;

&lt;p&gt;黑五入的这个bundle附送了辐射3和4，但考虑到18禁的游戏分级，没有给小朋友装。买了Just Dance，然后一家子开启乱舞模式。&lt;/p&gt;

&lt;p&gt;Just Dance最多可以识别出6个人，每场舞蹈后打分。精度如何不知道，反正我没有儿子跳得好–这小子几乎每次都是第一。&lt;/p&gt;

&lt;p&gt;跳两场就一身汗，锻炼身体的功能还是极好的。&lt;/p&gt;

&lt;p&gt;补充1：&lt;/p&gt;

&lt;p&gt;经过上网了解，发现水果忍者也是相当不错的体感游戏，于是从xbox.com网购了数码版。没想到安装出现了状况。&lt;/p&gt;

&lt;p&gt;我是在PC端购买的，回到Xbox搜索这个游戏，发现已经在下载安装了。这一点看微软帐户关联做得不错。问题出现在安装完毕之后。启动游戏，黑屏，说需要更新，点击尝试更新，始终未果。检查网络连接也没有问题。最后到指示的网址xbox.com/xboxone/update/help寻求帮助，除了一堆插线拔线的废物建议，完全没有帮助。&lt;/p&gt;

&lt;p&gt;冷静下来，发现无非是安装过程有误，根据PC端的经验，卸载重装就是了。卸载的很顺利，到“我的游戏应用”里，选中水果忍者，按contex按钮（X按键左侧那个3道杠的小按钮），选择卸载。之后到商城中搜索水果忍者游戏，点安装。&lt;/p&gt;

&lt;p&gt;然后我们疯狂地砍了一个下午的空气。&lt;/p&gt;

&lt;h2 id=&quot;xbox-one-2&quot;&gt;Xbox One存疑&lt;/h2&gt;

&lt;p&gt;目前看来没法进行完全游戏安装，运行游戏时总会需要光驱里的游戏盘。怎样转换成电子版本脱盘运行正在摸索中。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>同时显示两个Excel文件内容</title>
   <link href="http://username.github.io/%E6%8A%80%E5%B7%A7/2015/11/18/open-excel-file-in-different-window"/>
   <updated>2015-11-18T00:00:00+01:00</updated>
   <id>http://username.github.io/%E6%8A%80%E5%B7%A7/2015/11/18/open-excel-file-in-different-window</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;奇怪的历史问题&lt;/h2&gt;
&lt;p&gt;微软Office的其他组件,word, powerpoint等, 基本上都是每打开一个文件就创建一个实例, 占据一个窗口. 唯独excel是多个文件共享一个窗口. 也许能够节省资源, 但如果要双文件对比操作就挠头了&lt;/p&gt;

&lt;p&gt;偏偏这个问题早就存在, 十几年过去了微软还是这个德性.&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;解决方法&lt;/h2&gt;
&lt;p&gt;微软早就贴出了&lt;a href=&quot;https://support.microsoft.com/en-us/kb/2636670&quot;&gt;解决方案&lt;/a&gt;, 具体地说就是到注册表里把非常规的 &lt;strong&gt;/dde&lt;/strong&gt; 参数改成大伙喜闻乐见的 &lt;strong&gt;“%1”&lt;/strong&gt; , 注意引号不能省.&lt;/p&gt;

&lt;p&gt;regedit=&amp;gt;Coputer\HKEY_CLASSES_ROOT\Excel.Sheet.12\shell\Open\command
改 (Default) 和 command 命令末尾, 同时重命名 Coputer\HKEY_CLASSES_ROOT\Excel.Sheet.12\shell\Open\ddeexec键.&lt;/p&gt;

&lt;p&gt;保险起见对Excel.Sheet.8做同样的修改, 虽然我只改了12就已经生效了.&lt;/p&gt;

&lt;p&gt;此技巧适用于office 2003/2010.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>实车驾驶经验</title>
   <link href="http://username.github.io/private/2015/08/06/"/>
   <updated>2015-08-06T00:00:00+02:00</updated>
   <id>http://username.github.io/private/2015/08/</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;缘由&lt;/h2&gt;

&lt;p&gt;原以为交规通过之后就是肌肉记忆的积累, 没必要动笔了. 但今天Luc在车上给我上的理论课让我意识到理论指导实践的重要性, 各种经验, 还是值得记录下来&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;第6小时&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;进车后的调整顺序, 首先是座位高度, 标准为放下遮阳板后依然可见50m处路标牌为准.&lt;br /&gt;
然后是座位远近, 标准为左脚离合踏板足尖顶到底, 左脚跟触地, 此时左髋不上挺.&lt;br /&gt;
再后是座椅靠背, 要求臀部充分靠后,腰部有支撑但肩背不接触.&lt;br /&gt;
下一步是方向盘, 以不触腿为标准尽量拉近放下, 目的是使手臂在驾驶时处于松弛状态.&lt;br /&gt;
之后是后视镜和左右侧镜, 左右镜要注意自己车的部位尽量小.&lt;br /&gt;
最后当然是安全带.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;正常情况要检查轮胎, 冷却液, 雨刷液 等等之后才放心上车, 考试时这一切简化为按下锁闭车门键( F. detresse右方的那个键) 如果有门没关严, 红灯会自己熄灭. 若稳定红灯则说明车门都已锁死.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;起步出库, 要退得尽量靠后, 减小出库过程车头转动角度&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;刚意识到, 目测右方路沿距离, 除了当初说的路沿线与右雨刷基部重合外, 右方后视镜里的情形其实是更为直观的佐证.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;转向前的确认步骤, 为方便考官察觉, 应当三次点头, 对应后视, 左/右后, 过肩死角. 注意左/右后为最重要关注点&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;转弯技巧: 确认, 亮转弯灯, 对应手置于12点位, 注意手肘下沉, 直行到刚过弯, 再次确认横向无来车, 一把转90度方向盘, 车身改变直行方向后再两手交替行进,至转弯过半(跟车速有关)放松让方向盘自行滑动复位, 注意手与方向盘始终接触 (滑动而不是松开), 以便随时终止复位过程.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;脚踏板的使用摒弃曾经以为的改变脚底与腿夹角的方法, 因太不可控；使用足跟触地后滑方法, 可精确制动.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;起步不熄火要求最低车速为10km/h, 方法是挂一档半松离合, 一旦车身开动, 默数三下, 这时车速超过10km/h怎么踩放离合都不会熄火, 可以彻底松离合&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;第8小时&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;理论上换档速度为2档20kmh, 3档30kmh, 但3档优良换档速度实为40kmh, 4档60kmh, 5档80kmh. 此外,在实际操作时是几乎没有时间目视速度仪精确度量的, 所以换档机遇的判断靠耳朵, 听到马达轰鸣(不同于起步时微小的声音)就表示要换一个高速档. 起步后第一次轰鸣换2档, 再一次轰鸣换3档, 然后维持在40~60kmh区间, 可以应付大多数情况.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;升速过程中稳松离合的情况仅发生在起步阶段, 一旦出现第一次轰鸣 (1档换2档), 可以迅速放开离合踏破, 车也不会熄火.&lt;br /&gt;
相对应的, 在降速过程中每一步都要稳松离合, 以免熄火.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;油门一踩到底不会让车状态立刻改变, 所以没有必要顾虑. 换档时松档同时给油可以更快速的完成动作.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;快速完成动作不到表手忙脚乱, 而是手脚都要一次到位(过程尽量短但没必要过分剧烈), 然后每个动作都做到准确.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;转向前的确认动作两秒内完成, 死角确认要看到后座左右窗的后部&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;手握方向盘永远在水平轴以上, 直路无大转向可能的手放在3点9点, 弯路手放在2点10点, 大转弯手放12点和3/9点, 永远不再水平线下.&lt;br /&gt;
大转弯不要忘记两手交替实现过90°方向盘旋转动作&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;转向前先确认后亮转向灯. 绕行障碍物时也是一样&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;换档时手不可握紧手柄, 而应当伸平手掌, 用掌窝前后推动手柄,保证其落在应当在的位子, 以免混淆3档1档&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;掉头时点踩离合获取微弱动力, 猛打方向&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;第9小时&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;主要谈论刹车技巧, 要点在尽可能提前消除多数动量, 为自己留下尽可能多的缓冲余地, 但不可以一脚踩死.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;完美的静止刹车不应当在最后出现点头, 方法是开始踩下大半腳刹, 汽车出现显著减速, 然后通过点刹的方式进一步减速, 直到完全静止&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;前方欲阻决定减速的动作分解:&lt;br /&gt;
松开油门, 此时发动机的制动效果体现&lt;br /&gt;
还有继续减速, 踩离合, 降档, 发动机制动效果增强&lt;br /&gt;
还要继续减速, 则踩腳刹, 配合降档, 直到速度达到预定效果. 注意降档过程中不能出现踩离合松腳刹的组合, 因为这样车轮既没有被马达驱动, 也没有被刹车片阻碍 , 处于失控状态, 属于大忌.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Luc发火了, 因为我数次指处前方潜在危险, 这是对教练的不信任. 正确的态度是完全遵照教练要求行事, 否则就是分心, 起不到练车效果, 浪费金钱.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在不踩油门的情况下, 车速为所在档X10kmh.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;曾经在知乎上试图寻找方向盘转角和轮胎转角的倍数比例, 现在才意识到两者之间不是线性关系, 原先一根转向杆上联方向盘下捅转向轮的时代已经一去不返, 据说F1还保留之这个结构. 简单说, 方向盘转过30度, 轮胎转多少度跟当前速度, 轮胎当前偏离轴向角度, 厂商, 品牌, 型号, 路况 etc全有关系. 结果只能定性不能定量, 反正比方向盘转过的角度小, 这里记作&amp;lt;30.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-4&quot;&gt;第12小时&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;主要目标是实现切换速度的平稳过度, 从开始的起步, 换二档, 超过40换三档, 遇路障踩刹车减速, 有时减到二档, 然后在红灯前停车, 换回一档.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最大的问题是脚无意识的放在离合板上, 减速时踩离合的坏习惯. 主要是怕熄火的心理, 但其实只要速度没有降到坎上, 是不可能熄火的. 正确的姿势是右脚踩脚刹, 听发动机, 有咆哮声时左脚再踩离合换速, 更多情况是不用换档就过了减速区了, 右脚再回到油门上加速, 整个过程左脚不动.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;关于起步熄火的问题, Maurise展示了一个技巧: 踩离合, 挂一档, 此时左脚不松踩右脚油门, 发动机轰鸣, 轻松左脚离合, 一但车动左脚锁定, 右脚继续给油,直到车开出3米开外再松离合.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-5&quot;&gt;第13小时&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;过障碍减速时, 如果速度足够低, 可以直接踩离合降档, 否则要踩刹车降档, 此时右脚在降档结束前不可以离开刹车踏板&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;降档过程避免熄火的方法: 左脚踩离合, 右手换档, 此时左脚不可完全松开离合, 而要像起步时那样半放松并锁定位置, 直到车速明显被发动机控制(有一下震颤, 说明车轮转速与马达通过离合器同步了)再完全放开.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;过转盘时对于转盘上是否有车的判断需要动态进行, 不是做题时的静止图片, 有车切入转盘, 就算还没有实现绕盘动作(车身还没有与转盘圆切线平行), 也应当算作绕盘车, 有优先权.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;出转盘的时机判断很有意思, 车头指向出口的瞬间就应当走外线了,这样可以保证不会对其他车辆造成判断方面的困扰, 此时不忘打右转灯&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Luc展示了上坡启动的技巧, 手刹锁定的情况下, 踩离合, 换1档, 踩油门, 感觉车向前窜的瞬间锁死双脚, 右手放手刹, 车辆平稳滑出.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-6&quot;&gt;第14小时&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;另外一种上坡启动技巧, 用于坡度不大的情况. 脚踩离合和脚刹的同时松开手刹, 轻松离合直到轻微震颤, 表明动力传输路径建成, 之后快速松开脚刹切换油门, 即使车暂时后退也不要紧, 关键点在左脚离合一定要锁定角度, 过松则熄火, 过紧则车不动.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;手刹抬起时的好习惯是不用拇指按动棘爪联动, 使得抬起手柄同时可以听到锁扣的嗒嗒声,这对全凭听力判断车况至关重要, 一般情况小坡度4次嗒嗒声, 大坡6次.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下一步需要熟练掌握的是迅速的升档降档, 场景是距离前方30kmh限速牌二十米处, 要求从50kmh平稳降到指定速度, 在过牌时不超速, 但也不能低太多. 25以上. 我的出错点是因为知道前方有限速牌, 提前减速, 让后方尾行车辆猝不及防.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;理论方面的一个要点: 所有障碍的穿越速度都是30kmh: 凸起减速栏, 人行道, etc；唯独过转盘 sens geratoire时的限速为20kmh&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;绕转盘直行的出错点: 应当津贴右侧转半圆出去, 而不是直插左道在切右道这种野蛮行径.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-7&quot;&gt;第18小时&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;主要问题有: 换档太不利索, 或者减速过早, 离红灯20m就踩刹车, 结果3档换2档的步骤被跳过, 直接停车了； 或者起步很久才换上2档, 被后面超车.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;转弯时踩油门实为大忌, 慢慢转, 不着急&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;减速技巧, 其实用离合就可以简单控制速度, 目前还不习惯&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;油门离合一起踩的老毛病&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;放松, 专注, 好运&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-8&quot;&gt;第20小时&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;终于过关第一阶段,比预订整整迟了10小时,  主要是眼手配合方面的问题&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;关于降速离合的操作, 今天Syrile讲到一个很重要的问题: 速度表不可取, 应当直接看马达转速表. 想想也是, 离合器作用于马达和车轮之间, 用于尽量小损耗的传递能量, 至于能量有多少转换成车速, 实在有太多的牵扯因素: 车速, 坡度, 风阻, 车况, etc. 原先所谓40升3档, 30降2档的情况仅限于平地. 看马达转速表就没有这些干扰, 到1则降, 逢2就升, 匀速行驶, 保持1.5.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;降档减速, 马达转速为1, 换档, 之后pointinage, 类似起步的锁死离合刻度, 直到平稳后再松开&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;灯的用法: 停靠路边先打右转灯再减速&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;灯的用法: 掉头时踩住离合挂1档, 方向盘往左打到头, 前后无车, 最后亮左传灯, 缓慢转弯&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;升三档防止误操作到一档的方法: 先空档point mort在向右使力前退到三, 分两步走.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;倒车时, 前后看, 频率3秒一次&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-9&quot;&gt;第21小时&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;降速减档的问题, 可以和缓慢刹车同时进行, 减短操作时间&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fannie提出的一个好方法, 在纸上列出一个情景下需要进行的操作和步骤, 然后脑海重现&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;过弯减速的正确操作: 离路口10m左右缓刹车, 不要太早,  5m左右踩离合继续减速, 理想状态是过弯瞬间速度小于10kmh, 观察同时切换一档, 起步, 迅速加到2档&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;时速20kmh完全静止的刹车距离小于2m, 可视为安全速度. 想停就停&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-10&quot;&gt;第33小时&lt;/h2&gt;
&lt;p&gt;今天Luc只让我傲完成小路上行驶这一件事，包含内容包括&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;起步前的观察，左转指示灯，死角确认&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;确保正确的行车线，不太左以免挡超车或来向车道，也不太右以免掛静止车后视镜&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;及时升降档位，包括行驶挂二档，过弯（窄，挤，不清）一档，大路行驶三档及以上&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;过弯时的正确步骤：&lt;br /&gt;
左转：观察三点（左右镜，后视镜，死角），打转向灯；若双向车道靠右，有左转道上道，若单向道靠左，靠近路口处同时降档减速，先左后右，&lt;strong&gt;左死角观察&lt;/strong&gt;，然后走到实在不能再进一步的地方，打左方向，溜右侧前行&lt;br /&gt;
右转：观察三点，打转向灯，靠右降档减速，先左后右，&lt;strong&gt;右死角观察&lt;/strong&gt;，然后贴人行道右转&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;过路口判断我是否有优先权&lt;br /&gt;
什么标志都没有，右车优先&lt;br /&gt;
倒三角，右车优先&lt;br /&gt;
红停，左右车都优先&lt;br /&gt;
不可混淆行人斑马线和左右必停车的直角框&lt;br /&gt;
红绿灯，我绿则我优先&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;窄路迎面来车，即使我优先仍应当减速慢行&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;窄路口，拥挤路口，不详路口转弯，降到一档，但要在到路口时再做此动作&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;过路口，先左后右观察，但不必停车，慢速滑过&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;早就应当想到但终于第一次实践的技巧， 挂一档时，即使没踩油门也不应当熄火，因为发动机系统会最低给油。此时速度大约是10kmh。如果希望以更小的速度行驶，可以&lt;strong&gt;半踩离合&lt;/strong&gt;，使得发动机传动到轮胎上的有效功率进一步降低。&lt;br /&gt;
低速过弯，泊车，倒车等可用此技巧。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>利用Gitlab内置nginx添加新网站</title>
   <link href="http://username.github.io/lessons/2015/08/04/gitlabnginx"/>
   <updated>2015-08-04T00:00:00+02:00</updated>
   <id>http://username.github.io/lessons/2015/08/04/gitlabnginx</id>
   <content type="html">
&lt;p&gt;Gitlab整合了仿制Github所需要的几乎所有服务器端程序,例如内置了nginx. 作为静态网站服务的首选服务, nginx强大灵活的分流配置一直为广大程序员喜爱.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;目标&lt;/h2&gt;
&lt;p&gt;利用现成的Gitlab内置nginx服务器, 添加新的静态网站到指定端口&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;改菜谱&lt;/h2&gt;
&lt;p&gt;Gitlab利用一种叫做菜谱cookbook的方法管理不同模板template的配置文件,每次gitlab-ctl reconfigure都是重新生成配置文件的过程. 换言之, 原先直接对配置文件的修改在这里是行不通的, 因为只要重启服务就会被覆盖.&lt;/p&gt;

&lt;p&gt;修改nginx的菜谱&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	sudo vi /opt/gitlab/embedded/cookbooks/gitlab/templates/default/nginx.conf.erb 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;找到 &lt;strong&gt;include &amp;lt;%= @gitlab_http_config %&amp;gt;;&lt;/strong&gt; 这一行, 在其上方添加客制配置文件路径 &lt;strong&gt;nginx[‘custom_nginx_config’] = “include /etc/nginx/conf.d/*.conf;”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;修改后完整的菜谱为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	# This file is managed by gitlab-ctl. Manual changes will be
	# erased! To change the contents below, edit /etc/gitlab/gitlab.rb
	# and run `sudo gitlab-ctl reconfigure`.

	user &amp;lt;%= node[&#39;gitlab&#39;][&#39;web-server&#39;][&#39;username&#39;] %&amp;gt; &amp;lt;%= node[&#39;gitlab&#39;][&#39;web-server&#39;][&#39;group&#39;]%&amp;gt;;
	worker_processes &amp;lt;%= @worker_processes %&amp;gt;;
	error_log stderr;
	pid nginx.pid;

	daemon off;

	events {
	  worker_connections &amp;lt;%= @worker_connections %&amp;gt;;
	}

	http {
	  sendfile &amp;lt;%= @sendfile %&amp;gt;;
	  tcp_nopush &amp;lt;%= @tcp_nopush %&amp;gt;;
	  tcp_nodelay &amp;lt;%= @tcp_nodelay %&amp;gt;;

	  keepalive_timeout &amp;lt;%= @keepalive_timeout %&amp;gt;;

	  gzip &amp;lt;%= @gzip %&amp;gt;;
	  gzip_http_version &amp;lt;%= @gzip_http_version %&amp;gt;;
	  gzip_comp_level &amp;lt;%= @gzip_comp_level %&amp;gt;;
	  gzip_proxied &amp;lt;%= @gzip_proxied %&amp;gt;;
	  gzip_types &amp;lt;%= @gzip_types.join(&#39; &#39;) %&amp;gt;;

	  include /opt/gitlab/embedded/conf/mime.types;
	  
	  &amp;lt;%= @custom_nginx_config %&amp;gt;
	  include &amp;lt;%= @gitlab_http_config %&amp;gt;;
	  &amp;lt;% if @gitlab_ci_http_config %&amp;gt;
	  include &amp;lt;%= @gitlab_ci_http_config %&amp;gt;;
	  &amp;lt;% end %&amp;gt;

	}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-2&quot;&gt;添路径&lt;/h2&gt;
&lt;p&gt;因为所有Gitlab的行为是由Ruby脚本定制的, 所以下一步要告知执行脚本客制网站的配置文件路径.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	sudo vi /etc/gitlab/gitlab.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;找到 &lt;strong&gt;nginx[‘custom_nginx_config’]&lt;/strong&gt; 一行取消注释, 并填写其后的配置文件路径, 修改后的内容为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	nginx[&#39;custom_nginx_config&#39;] = &quot;include /etc/nginx/conf.d/*.conf;&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;nginx&quot;&gt;正常配置nginx&lt;/h2&gt;
&lt;p&gt;如果路径不存在,创建之&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	sudo mkdir -p /etc/nginx/conf.d
	sudo vi /etc/nginx/conf.d/nginx.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里使用14344端口绑定到客制网站, 完整的配置文件如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	server {
		listen   14344; ## listen for ipv4; this line is default and implied
		#listen   [::]:80 default_server ipv6only=on; ## listen for ipv6

		root /usr/share/nginx/www;
		index index.html index.htm;

		# Make site accessible from http://localhost/
		server_name 192.168.107.201;

		location ~* \.(eot|ttf|woff)$ {
			add_header Access-Control-Allow-Origin *;
		}

		location / {				
			
			 if ($request_method = &#39;OPTIONS&#39;) {
				add_header &#39;Access-Control-Allow-Origin&#39; &#39;*&#39;;
				#
				# Om nom nom cookies
				#
				add_header &#39;Access-Control-Allow-Credentials&#39; &#39;true&#39;;
				add_header &#39;Access-Control-Allow-Methods&#39; &#39;GET, POST, OPTIONS&#39;;
				#
				# Custom headers and headers various browsers *should* be OK with but aren&#39;t
				#
				add_header &#39;Access-Control-Allow-Headers&#39; &#39;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#39;;
				#
				# Tell client that this pre-flight info is valid for 20 days
				#
				add_header &#39;Access-Control-Max-Age&#39; 1728000;
				add_header &#39;Content-Type&#39; &#39;text/plain charset=UTF-8&#39;;
				add_header &#39;Content-Length&#39; 0;
				return 204;
			}
			if ($request_method = &#39;POST&#39;) {
				add_header &#39;Access-Control-Allow-Origin&#39; &#39;*&#39;;
				add_header &#39;Access-Control-Allow-Credentials&#39; &#39;true&#39;;
				add_header &#39;Access-Control-Allow-Methods&#39; &#39;GET, POST, OPTIONS&#39;;
				add_header &#39;Access-Control-Allow-Headers&#39; &#39;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#39;;
			}
			if ($request_method = &#39;GET&#39;) {
				add_header &#39;Access-Control-Allow-Origin&#39; &#39;*&#39;;
				add_header &#39;Access-Control-Allow-Credentials&#39; &#39;true&#39;;
				add_header &#39;Access-Control-Allow-Methods&#39; &#39;GET, POST, OPTIONS&#39;;
				add_header &#39;Access-Control-Allow-Headers&#39; &#39;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#39;;
			}
		}
		
	}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后在指定路径上添加静态网页&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	sudo mkdir -p /usr/share/nginx/www
	sudo chmod 0777 -R /usr/share/nginx/www
	vi /usr/share/nginx/www/index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后重启Gitlab服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	gitlab-ctl reconfigure
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;收工.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Compile OpenCV under Debian</title>
   <link href="http://username.github.io/2015/07/15/compile-opencv-under-debian"/>
   <updated>2015-07-15T00:00:00+02:00</updated>
   <id>http://username.github.io/2015/07/15/compile-opencv-under-debian</id>
   <content type="html">
&lt;h1 id=&quot;section&quot;&gt;依赖环境的安装&lt;/h1&gt;

&lt;h2 id=&quot;ffmpeg&quot;&gt;FFMPEG相关模块&lt;/h2&gt;

&lt;p&gt;首先添加deb-multimedia提供的库文件支持到本地库列表中&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su -
echo &quot;deb http://www.deb-multimedia.org wheezy main non-free&quot; &amp;gt;&amp;gt; /etc/apt/sources.list.d/deb-multimedia.list
echo &quot;deb-src http://www.deb-multimedia.org wheezy main non-free&quot; &amp;gt;&amp;gt; /etc/apt/sources.list.d/deb-multimedia.list
apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后安装公匙&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install deb-multimedia-keyring
apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后安装依赖文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install build-essential checkinstall git cmake libfaac-dev libjack-jackd2-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libsdl1.2-dev libtheora-dev libva-dev libvdpau-dev libvorbis-dev libx11-dev libxfixes-dev libxvidcore-dev texi2html yasm zlib1g-dev libsdl1.2-dev libvpx-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此处曾经出现过libfaac-dev找不到的情况, 后来发现是因为没有apt-get update的原因&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;安装其他库文件&lt;/h2&gt;

&lt;p&gt;Gstreamer:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libgstreamer0.10-0 libgstreamer0.10-dev gstreamer0.10-tools gstreamer0.10-plugins-base libgstreamer-plugins-base0.10-dev gstreamer0.10-plugins-good gstreamer0.10-plugins-ugly gstreamer0.10-plugins-bad gstreamer0.10-ffmpeg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;libgtk2:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libgtk2.0-0 libgtk2.0-dev  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;libjepg:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libjpeg8 libjpeg8-dev 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-2&quot;&gt;编译库文件&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;mkdir ~/source  
mkdir ~/source/x264  
mkdir ~/source/v4l  
mkdir ~/source/opencv  
mkdir ~/source/ffmpeg  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;compile-x264&quot;&gt;Compile X264&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd ~/source/x264  
wget ftp://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-20120528-2245-stable.tar.bz2  
tar xvf x264-snapshot-20120528-2245-stable.tar.bz2  
cd x264-snapshot-20120528-2245-stable  
./configure --enable-shared --enable-pic
make  
sudo make install  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;compile-ffmpeg&quot;&gt;Compile ffmpeg&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd ~/source/ffmpeg  
wget http://ffmpeg.org/releases/ffmpeg-0.11.1.tar.bz2  
tar xvf ffmpeg-0.11.1.tar.bz2  
cd ffmpeg-0.11.1  
./configure --enable-gpl --enable-libfaac --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libtheora --enable-libvorbis --enable-libx264 --enable-libxvid --enable-nonfree --enable-postproc --enable-version3 --enable-x11grab --enable-shared --enable-libvpx --enable-pic
make  
sudo make install  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;compile-v4l&quot;&gt;Compile v4l&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd ~/source/v4l  
wget http://www.linuxtv.org/downloads/v4l-utils/v4l-utils-0.8.8.tar.bz2  
tar xvf v4l-utils-0.8.8.tar.bz2  
cd v4l-utils-0.8.8  
make  
sudo make install  
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;opencv&quot;&gt;终于可以编译OpenCV本体了&lt;/h1&gt;
&lt;p&gt;此处一个小插曲, 下载了 OpenCV3.0.0正式版试图编译, 结果在24%进度报错, 原因是cap_ffmpeg.cpp文件在45行处使用了一个未声明enum类型变量AVCodecID. 尝试所有方案,未遂. 重新回到2.4.9版本,一次编译就过了.
还有改进空间啊OpenCV Team.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/source/opencv
wget http://kent.dl.sourceforge.net/project/opencvlibrary/opencv-unix/2.4.9/opencv-2.4.9.zip  
unzip opencv-2.4.9.zip  
cd opencv-2.4.9  
mkdir release  
cd release  
cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_NEW_PYTHON_SUPPORT=ON ..
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>交规备考</title>
   <link href="http://username.github.io/private/2015/06/04/"/>
   <updated>2015-06-04T00:00:00+02:00</updated>
   <id>http://username.github.io/private/2015/06/</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;缘由&lt;/h2&gt;

&lt;p&gt;就当日记了&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;倒数12天&lt;/h2&gt;

&lt;p&gt;出错点:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;关于让路的问题, 又栽跟头了. 平地载重车让轻车, 窄巷迎面来卡车, 我应当停下来等待对方拐到空地给我让路.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;右侧来车优先&lt;/strong&gt;标识牌说明什么: 首先是优先权归右方, 其次是前面有个路口-_-!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;有可能需要到医生处进一步检查才能获取驾驶资格的情况, 包括了&lt;strong&gt;酒精依赖(dépendance d’alcool)&lt;/strong&gt;. 何等心大的警察才敢放酒鬼上路啊.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;所有至死车祸中, 最首要原因是, 酒驾. 我还以为是超速呢&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;工程车屁股上一个大的左下/右下闪烁箭头说明, 前方有施工, 或有事故. 后一个当时没想到&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;一字并肩红绿灯, 区分了直行道和左转道, 所以我在左转道而我侧亮绿灯时, 不用考虑让对面直行车先走的问题, 直接左转&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;一个生词: euphorique a. 欣快的, 满足的&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;倒数11天&lt;/h2&gt;

&lt;p&gt;出错点:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;前车不到最高限速, 我欲超车, 应当&lt;strong&gt;加速到最大许可速度&lt;/strong&gt;, 以缩短超车过程&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;stationnement paygant的标识牌作用于整个zone, 所以前面路口有这个牌, 右边拐进去也同样有效, 付费泊车&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;红绿灯熄灭, 则使用默认右侧优先原则&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;vent lateral标识牌仅说明有风这件事, 无关风向sens风力densité&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;陷阱: 边境有海关douanier和警察policier标识, 则没有gendarmerie什么事, 宪兵乱入&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;倒数10天&lt;/h2&gt;

&lt;p&gt;出错点:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;关于道左泊车的问题, 实在分不清是否为单行道时, 还是保守些, 不停.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;阴险的陷阱: 图片显示场景, 问题却问标识牌&lt;strong&gt;可能&lt;/strong&gt;出现的情况, 所以不据图判断, peut annoncer的范围完全依据交规&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;500kg PTAC必备的东西: deux Feux Stop; deux clignotants. 其实是每个车都应当有的停车灯和转弯指示灯. 当然还有属于自己的车牌号carte immatriculation, 但已经问滥了&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;stationnement unilatéral仅作用于所在路侧&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;夏季久旱下阵雨, 路况 particulierement glisante, 而不是 legerement glisante. 非常滑而不是有些滑 (神选择, 给跪了)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;概念问题, camionnette &amp;lt;3.5t&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;即使在zone de rencontre, 步行人也禁止sationnement sur chaussée, 话说pieton如何stationnement这样一个高难度的技术问题难道真没人关心么&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;一类狡猾问题: 地标和路标的组合可能性判读, 例如右侧路口是虚线栏车线, 则不可能是stop牌(那会是实线栏车线)而是倒三角牌&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;我与后车同处插车道, 后车闪黄灯, 可我车快, &lt;strong&gt;不让&lt;/strong&gt;, 立刻完成插车动作.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;傻B问题的傻B回答: 闪烁的黄灯会是permanent么, 不会, 因为后面会变红灯.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;占用残疾人停车位的后果: 罚款amende, 车被拖走mise en fourriere, 但不扣分&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;12年底开始, 轮胎标识能耗efficacité energitique,湿地稳定adherence sur sol mouille以及噪音级别bruit de roulement exterieur&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;新车必备: un essuie-glace avant, 前脸雨刷；un lave-glace avant, 前脸除冰&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;superviser期间, 车上必备 livret d’appentissage, certificat d’immatriculation,  l’avenant d’assurance.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-4&quot;&gt;倒数9天&lt;/h2&gt;

&lt;p&gt;出错点:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;面对双向行驶危险牌, 我应当减速, 立刻&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;居民区里的路口处, 急减速, 备刹车&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;紧虚线间隔右侧慢车道, 我不占道&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;了解风险, 可以limite risque&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下雪天应当开启ventilation, FC, essuie-glace&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;半空中悬吊的红绿灯, 作用于所有道, (区别于右侧红绿灯?)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;面对&lt;/strong&gt;交警时, 步行人与机动车一样都要停下来&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;居民区外, 重车 (&amp;gt;3.5t) 长车 (&amp;gt;7m)要预留50m的安全距离, 这种情况下已经抛弃2秒安全距离的限定了 (因为多半大于2秒)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;autopartage利于快速租车和方便泊车.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;小于3.5t, B照； 介于3.5t和4.25, B照加formation；大于4.25t, BE照&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-5&quot;&gt;倒数8天&lt;/h2&gt;

&lt;p&gt;出错点:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;右侧紧虚线标出BUS专用道,  (即使地上不是处处标识BUS字样). 我即使要右转, 也不可占用此道&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;黑话 un siege dos à la route背向前的车载婴儿摇篮, 使用方法当然要关闭气囊désactiver l’airebage passage&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;lieu dit后面是居民区, 当然限速50kmh, 但不能说是lieu dit limite de vitesse&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;confiscation为没收车, 之后或者报废, 或者拍卖, 总之别想再要回来了&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;车祸至死步行人中, 一半以上大于65岁&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;隧道中降温液亮红灯, 不可立即停车, 而要到一处arret urgent再停&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在转盘口上不可能看见carrefour sens geratoire的标识牌, 只有可能是ceder les passages的提示牌&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;路口处横贯道路的实心stop地标线说明什么: 这条路单向 sens unique, 否则应当是右边往中心线处画一个直角框&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在路右停泊车左侧暂时停一下并非绝对禁止,  只要所在路够宽, 不塞车&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;高速, 为方便右侧车插入, 我可以占用左侧超车道.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;但凡车祸, 无论肉体corporel或器材materiel, 我都不可逃逸 délit de fuite&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;fleche rabattement me concerne的意思并不一定是我在并道, 而是指我在地标指导的行车方向上&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;判断超车许可时, 只要后方欲超车辆没有拐上左侧超车道, 即使闪黄灯表明超车意图, 我亦可无视之. 自行超车.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-6&quot;&gt;倒数3天&lt;/h2&gt;

&lt;p&gt;出错点:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;注意看路最左边的地标线， 如果是实线则说明这是单向道， 超车方面有优势。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;所有进行非前行操作toutes les manoeuvres（倒车，调头，泊车等）的车自动丧失优先权， 所有这些操作不得妨碍后车前进。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;区分endroit fréquenté par les enfants标识牌和l’aire de pieton标识牌，以及chemin obligatoire pour piétons标识牌， 分别是红边三角， 蓝底方框和蓝底圆形。但图案都是大人牵小孩的手。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;看见有reduit de voie的标识牌就结束超车行为，尽早并入右道。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-7&quot;&gt;倒数2天&lt;/h2&gt;

&lt;p&gt;出错点:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;出隧道, 为避免刺目, 可以降下遮阳板pare-soleil, 也可以&lt;strong&gt;戴上太阳镜&lt;/strong&gt;, 话说戴太阳镜时失控风险真的没人在意么&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;路口棋盘格damiers代表意义除了traverser une voie de bus, 还有&lt;strong&gt;une zone de danger potentiel&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;第一个见证车祸的人, 原则上要做三件事: 保护自己, 呼叫救援, 拯救伤者. 具体项目包括gilet, 112, reconforter le blessé&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;正立红边三角中心感叹号, 表示除了已有对应标识牌之外的其他危险性, 补充危险.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在居民区内, 距离pieton以及&lt;strong&gt;vehicule 2 roues / 3 roues&lt;/strong&gt;都要至少1m安全距离&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;危险提示牌要求并入左道, 但后方正在被超车, 不变道&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;尽管有优先权, 但左拐时依然要让车 (对面来向)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;区分changer à autre chaussé 与 changer à autre cote de pleine-terre警示牌&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-8&quot;&gt;倒数1天&lt;/h2&gt;

&lt;p&gt;出错点:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;前车在倒车停泊，按理应当为我让路，但认为obligatoirement me laisser passer就不对了， 这么绝对的事不可能&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;尽量靠右的原则哪怕到了路口也依然有效&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不占用BUS道不代表右转或泊车也不能traverser&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;墨镜3级以内可以在autoroute上戴， 但不能在隧道里戴（dans le tunnel），不同于上面sortie de tunnel&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;插入正常行驶道应当尽量接近许可速度上限&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;蓝虚线说明免费限时泊车，以及&lt;strong&gt;controle par disque&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;急刹车，亮F.Stop和F.Detresse&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;摩托车的危险性包括se faufiler钻缝以及gabarit形态？&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;出了付费泊车区，默认免费最多7天的泊车权利&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-9&quot;&gt;考试体验&lt;/h2&gt;

&lt;p&gt;convocation上标注的时间是14h30, 保险起见13h10就到考场了. 没曾想真正开始验明身份一直拖到了15h00. 按照注册学校分批进入, 出示证件后会分发一个遥控器, 显示姓名的头三个字母. 所有人落座后, 主考老师重申考场纪律和操作方法, 然后键入红AB红CD绿, 激活考试模式 (强烈的魂斗罗即视感).&lt;/p&gt;

&lt;p&gt;考试内容远易于模拟题, 没有太多的陷阱. 40道题答完, 屏幕上竟然没有成绩. 顿时傻眼, 心理还纠结过莫非激活方法不对考试无效了, 幸亏主考老师解释说当天晚上考试成绩将发送给各考生所在驾校. 当初谁信誓旦旦的说考完就知道成绩的!&lt;/p&gt;

&lt;p&gt;回到家电话一直开着, 却一夜未响. 第二天有等了一个上午, 依然没消息. 心不由得沉了下去. 下午打电话到驾校, 竟然始终占线. 一怒之下决定亲自跑一趟. 一进门就看见秘书桌上我的资料, 赶紧询问结果, 得知顺利过关才长出一口气. 再问拖延原因, 才知道虽然号称网上查成绩, 却要到48小时后. 考场所做的是当天成绩通过信件邮寄到驾校, 最早也要隔天驾校才有可能拿到学生的成绩.&lt;/p&gt;

&lt;p&gt;虽然历时久远, 好在结果尽如人意. 留下一时感悟, 方便后人.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>升级ESXi5.5到6.0</title>
   <link href="http://username.github.io/skills/2015/04/06/esxi5560"/>
   <updated>2015-04-06T00:00:00+02:00</updated>
   <id>http://username.github.io/skills/2015/04/06/esxi5560</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;主机配置&lt;/h2&gt;
&lt;p&gt;ASUS P7H55-M的主板，cpu是i7 860，8个Go的内存。  跑ESXi5.5很久了，突然听说6.0推出，大喜，手忙脚乱的升级去也&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;升级&lt;/h2&gt;
&lt;p&gt;在&lt;a href=&quot;http://isite.tw/2015/03/13/13049&quot;&gt;这个&lt;/a&gt;网站上下载Offline Bundle，然后使用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh root@ip_esxi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;命令登录到ESXi的控制台，键入升级命令如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;esxcli software vib install -d path/VMware-ESXi-6.0.0-2494585-depot.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后重启，新版本就被部署了&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;网卡驱动&lt;/h2&gt;
&lt;p&gt;重启后vSphere Client怎么都连不上，无奈插显示器直接操作，结果发现竟然无法找到网络适配器。经官网确认，网卡型号为realtek 8111e千兆卡。网上找了好几个vib驱动，最后大都指向两个vib文件
&lt;em&gt;VMware_bootbank_net-r8168_8.013.00-3vmw.510.0.0.799733&lt;/em&gt; 和 &lt;em&gt;VMware_bootbank_net-r8169_6.011.00-2vmw.510.0.0.799733&lt;/em&gt; 。 
尝试安装，都有依赖文件缺失的问题，没法用。后来在&lt;a href=&quot;http://www.vdicloud.nl/2015/02/07/realtek-nic-on-vsphere-6&quot;&gt;这个&lt;/a&gt;帖子里发现了封装过的&lt;a href=&quot;http://vibsdepot.v-front.de/depot/vft/net51-drivers-1.0/net51-drivers-1.0.0-1vft.510.0.0.799733.x86_64.vib&quot;&gt;驱动&lt;/a&gt;，下载后使用如下命令安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;esxcli software acceptance set --level=CommunitySupported
esxcli software vib install -d path/net51-drivers-1.0.0-1vft.510.0.0.799733.x86_64.vib 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启后网卡顺利被识别。&lt;/p&gt;

&lt;p&gt;最后一步：退出维护模式，否则无法启动guest。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>如何搭建一个私有git服务器</title>
   <link href="http://username.github.io/lessons/2015/01/13/git"/>
   <updated>2015-01-13T00:00:00+01:00</updated>
   <id>http://username.github.io/lessons/2015/01/13/git</id>
   <content type="html">
&lt;p&gt;大伙牛逼哄哄的上项目，轮到开源了又有些羞赧，于是需要一个私有git服务器，享受分布式开发的便利同时，还能保护源代码。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;服务器环境使用ubuntu 14.04，安装git和gitolite&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install git gitolite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后生成一个专门用来跑git服务的账户：git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo adduser --system --group --shell /bin/bash --disabled-password git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里使用–disabled-password 禁止了git账户远程登陆shell以及由此引发的安全隐患，个人感觉比其他教程上看到的随后再禁止shell要优雅。&lt;/p&gt;

&lt;p&gt;客户端此时可以操作了。注意客户端有两种：管理员客户端和一般用户客户端。这里要用的是管理员客户端，用来配置gitolite。&lt;/p&gt;

&lt;p&gt;在客户端，需要存在rsa的公开秘匙，存在于~/.ssh/id_rsa.pub文件中。如果没有，需要自行生成&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa -C &quot;user@postname&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意因为密匙对机器名的敏感性,第二个参数 &lt;strong&gt;-C&lt;/strong&gt; 一定不可以少,否则会出现Permission denied(publickey)报错&lt;/p&gt;

&lt;p&gt;假设这个服务器端的用户名为david，复制客户端公开秘匙到服务器端作为gitolite管理员秘匙&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scp ~/.ssh/id_rsa.pub david@git_server_IP_address:/tmp/git-admin.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;回到服务器端，执行如下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo su - git
gl-setup /tmp/git-admin.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;该客户端克隆管理包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@git_server_IP_address:gitolite-admin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此，几乎所有关于gitolite的配置都可以在本地进行，之后只需像所有git项目一样提交，服务器端会自动根据配置文件进行更新。之所以说几乎，因为无法完全删除一个已经创建的repository。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;添加项目&lt;/h2&gt;
&lt;p&gt;修改git-admin/conf/gitolite.conf文件，例如希望添加一个名为WebSrv的repository给所有人，添加如下内容到文件中：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;repo WebSrv
	RW+	=	@all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;提交后WebSrv项目会自动生成&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;添加用户&lt;/h2&gt;
&lt;p&gt;将用户的~/.ssh/id_rca.pub基于其用户名（例如devy）复制到git-admin/keydir/devy.pub，提交后用户就可以下载刚才生成的repository&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@git-server-IP-address:WebSrv
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-3&quot;&gt;补充：非管理员客户端自定义&lt;/h2&gt;
&lt;p&gt;例如上面的devy用户，在项目文件夹中要自行配置用户名和电子邮件，可以使用如下命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git config --global user.name &quot;devy&quot;
git config --global user.email &quot;devy@email.com&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这两个命令是通用git命令，非gitolite环境下也可以使用&lt;/p&gt;

&lt;p&gt;以上。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;补充2：替代选择&lt;/h2&gt;
&lt;p&gt;后来发现还有一种选择：gitlab，一个完整的平台，完全仿照github的功能，可以在网页端很酷的展示动态。适合有必要让用户参与开发过程的项目，以及懒人。官网就有&lt;a href=&quot;https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/README.md&quot;&gt;安装教程&lt;/a&gt;，滋不重复。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;补充3：版本更新&lt;/h2&gt;
&lt;p&gt;时至今日，最新版本为gitolite3，相应的安装命令和初始化命令都做了修改&lt;br /&gt;
安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install gitolite3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;初始化&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gitolite setup -a /tmp/git-admin.pub
&lt;/code&gt;&lt;/pre&gt;

</content>
 </entry>
 
 <entry>
   <title>How to config http proxy in Debian xfce4</title>
   <link href="http://username.github.io/skills/2015/01/09/how-to-config-http-proxy-in-debian-xfce4"/>
   <updated>2015-01-09T00:00:00+01:00</updated>
   <id>http://username.github.io/skills/2015/01/09/how-to-config-http-proxy-in-debian-xfce4</id>
   <content type="html">
&lt;h2 id=&quot;why-http-proxy&quot;&gt;Why http proxy&lt;/h2&gt;
&lt;p&gt;Many entreprises do not allow their employee visit web site for private reason. A config http proxy is obligate. 
Unlike Unity on Ubuntu, xfce4 on Debian have no option &lt;code&gt;Network Proxy Setting&lt;/code&gt;, so we have to set it in different way.&lt;/p&gt;

&lt;h2 id=&quot;how-to&quot;&gt;How To&lt;/h2&gt;
&lt;p&gt;There are two utilisation : &lt;code&gt;apt-get&lt;/code&gt; type and general web browser.&lt;/p&gt;

&lt;h3 id=&quot;apt-get&quot;&gt;apt-get&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo sh -c &#39;echo &quot;Acquire::http::proxy \&quot;http://XXX.XXX.XXX.XXX:YYYY/\&quot;;&quot; &amp;gt;&amp;gt; /etc/apt/apt.conf&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In here XXX.XXX.XXX.XXX is proxy server IP and YYYY is proxy server port.&lt;/p&gt;

&lt;h3 id=&quot;general-web-browser&quot;&gt;general web browser&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo sh -c &#39;echo &quot;export http_proxy=\&quot;http://XXX.XXX.XXX.XXX:YYYY\&quot;\nexport proxy=\&quot;http://XXX.XXX.XXX.XXX:YYYY\&quot;&quot; &amp;gt;&amp;gt; /etc/profile.d/proxy.sh&#39;
source /etc/profile.d/proxy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;about-ssl&quot;&gt;about SSL&lt;/h3&gt;
&lt;p&gt;on little surprise with &lt;code&gt;https&lt;/code&gt; connexion, navigator refuse de show the content of web page. A trick is add correct dns IP at &lt;code&gt;/etc/network/interfaces&lt;/code&gt; then restart networking service.&lt;/p&gt;

&lt;p&gt;Done.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>une tache simple de sauvegarde</title>
   <link href="http://username.github.io/skills/2014/12/19/une-simple-tache-de-sauvegarde"/>
   <updated>2014-12-19T00:00:00+01:00</updated>
   <id>http://username.github.io/skills/2014/12/19/une-simple-tache-de-sauvegarde</id>
   <content type="html">
&lt;p&gt;On me demande de sauvegarder un repertoire partagé dans notre réseau, sur une disque dur externe.&lt;/p&gt;

&lt;p&gt;Je le cosidere comme une tache très simple, mais je me suis trompe.&lt;/p&gt;

&lt;p&gt;J’utilise d’abord &lt;code&gt;KillCopy&lt;/code&gt; pour transferer les données, c’est un outil légé et rapide.  Il peut afficher le vitesse
en temps réel, je l’aime bien.
10 miniutes plus tard, le transfert n’avance plus, une erreur de “nom de fichier trops long” s’apparait.
Eventuellement c’est la limite de 255 charactaire pour les noms de fichier (chemin inclue) depuis windows 98.
Apres quelque recherche sur Google, je décide de changer l’outil de copier pour dépasse cette limite,
Le sauvaur: &lt;code&gt;FastCopy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Mais ce n’est pas fini. La tache s’arrete 4 heures plus tard, avec une erreur de ‘‘espace disque insufisant”.
je sais que ce n’est pas vrais: la disque dur est tout neuf et sa capacité est bouble que la taille de repertoire.
je trouve qu’elle en trains de copier un gros fichier de base d’outlook (.pst) à taille de 5Go. Ca me pense
tout suite la limite de Fat32.&lt;/p&gt;

&lt;p&gt;La vérification confirme mon hypothese.&lt;/p&gt;

&lt;p&gt;J’ai obligé de convertir le format de Fat32 à NTFS&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;lancer ‘Invite de Commandes’ en tant que d’administrateur&lt;br /&gt;
 taper &lt;code&gt;convert f: /fs:ntfs&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;La durée de conversation est 5 minutes environ, je peut finalement démarrer ma tache de sauvegarde.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>出乎 意料 之外</title>
   <link href="http://username.github.io/%E6%84%9F%E6%85%A8/2014/12/19/--"/>
   <updated>2014-12-19T00:00:00+01:00</updated>
   <id>http://username.github.io/%E6%84%9F%E6%85%A8/2014/12/19/--</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;缘由&lt;/h2&gt;

&lt;p&gt;网络小说作者素质普遍低下大约没有人敢否认。毕竟门槛太低，在目前这种没有遴选机制，
全靠读者用脚投票的大环境下，“出乎意料之外”这样的病句比比皆是可以看作一种现实的无奈。
而使用病句的动机，我曾经以为是那些无良写手多骗字数的伎俩，直到最近一位我很欣赏的作者
也使用了这样的搭配，才让我意识到也许他们真的没有发觉这是病句。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;辨析&lt;/h2&gt;
&lt;p&gt;物质客观存在，其发展规律可被观测，自然也可被预测。预测符合事实，可以称作&lt;code&gt;意料到&lt;/code&gt;，预测
不符合事实，可以称作&lt;code&gt;未意料到&lt;/code&gt;；这里涵盖了不作预测的情况，因为就结果而言，不预测与预测
错误同样不能得到正确的预测结果。&lt;/p&gt;

&lt;p&gt;简言之，&lt;code&gt;客观世界&lt;/code&gt;为全集，可分割为&lt;code&gt;意料到&lt;/code&gt;和&lt;code&gt;未意料到&lt;/code&gt;两个互补的子集。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;意料到&lt;/code&gt;子集，可被描述为：意料到，意料中，意料之内，等等；
&lt;code&gt;未意料到&lt;/code&gt;子集，是&lt;code&gt;意料到&lt;/code&gt;子集的补集，可被描述为：意料之外，出乎意料。“之外”与“出乎”都
是在全集范围内选取非所在集合的意思，即取反。图示如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ztba.github.io/img/unexpected.svg&quot; alt=&quot;集合示意图 svg&quot; title=&quot;意料与非意料集合示意图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;再看“出乎意料之外”这句话，错误就很明显了。“出乎意料”本身已经表明事实与预测不符合，是&lt;code&gt;意料到&lt;/code&gt;
子集的补集，即&lt;code&gt;未意料到&lt;/code&gt;子集；再“之外”一下，变成了补集的补集，即原集“意料之中”。 这和多年以前
我曾见到过的一句话颇有异曲同工之感。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;经过老师的谆谆教导，我的思想有了一个360度的转弯。
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-2&quot;&gt;规范&lt;/h2&gt;
&lt;p&gt;列举一下符合逻辑的说法：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- 出乎我意料的是
- 在我意料之外的是
- 不曾意料的是
- etc
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-3&quot;&gt;结论&lt;/h2&gt;
&lt;p&gt;不知道这是病句的，属于素质问题；知道病句还这样用的，属于品质问题，欢迎对号入座。&lt;/p&gt;

&lt;p&gt;ps：希望掌握真实数据的读者不妨用如下关键字在google中搜一下&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“出乎意料之外” site:qidian.com&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>debian环境下手动安装google chrome浏览器</title>
   <link href="http://username.github.io/skills/2014/12/16/debiangoogle-chrome"/>
   <updated>2014-12-16T00:00:00+01:00</updated>
   <id>http://username.github.io/skills/2014/12/16/debiangoogle-chrome</id>
   <content type="html">
&lt;p&gt;虽然chromium与chrome同宗同源，但毕竟还有少许差别：例如google的版本更新的快，还内置flash播放器，
等等。总之有那么一种需求，希望能够在debian环境下安装使用chrome浏览器。&lt;/p&gt;

&lt;p&gt;这就要手动安装了，步骤如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su
wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
sh -c &#39;echo &quot;deb http://dl.google.com/linux/chrome/deb/ stable main&quot; &amp;gt;&amp;gt; /etc/apt/sources.list.d/googlechrome.list&#39;
apt-get update &amp;amp;&amp;amp; apt-get install google-chrome-stable
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就可以享受google亲儿子了&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>最小安装上网用Debian</title>
   <link href="http://username.github.io/lessons/2014/12/15/debian"/>
   <updated>2014-12-15T00:00:00+01:00</updated>
   <id>http://username.github.io/lessons/2014/12/15/debian</id>
   <content type="html">
&lt;h2 id=&quot;section&quot;&gt;系统安装&lt;/h2&gt;
&lt;p&gt;下载debian的net安装镜像，大约两百多兆。&lt;br /&gt;
 下载链接：
 &lt;a href=&quot;http://cdimage.debian.org/debian-cd/7.7.0/i386/iso-cd/debian-7.7.0-i386-netinst.iso&quot;&gt;x86&lt;/a&gt;
 &lt;a href=&quot;http://cdimage.debian.org/debian-cd/7.7.0/amd64/iso-cd/debian-7.7.0-amd64-netinst.iso&quot;&gt;x64&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使用下载镜像安装，到了选择安装组件那一步，什么都不要选，默认
desktop和打印服务和其他组件三个选项也反选，这样下来安装完毕大约不到1个G&lt;/p&gt;

&lt;p&gt;当然这个时候是纯命令行界面的&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;桌面安装&lt;/h2&gt;
&lt;p&gt;比较了很多lightweight的桌面，在功能和身量之间权衡的结果，
我选择xfce4。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su
apt-get install xfce4 gcc build-essential linux-headers-$(uname -r)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里解释一下，后面三个库文件是为了建立起一个完整的编译环境。
例如在vmware虚拟机里安装vmtools，就一定要有这几个软件。&lt;br /&gt;
然后就是浏览器和小插件，我选择chromium；此外xfce4自带一个天气显示
插件，可以在顶部panel显示实时天气信息，对于懒得抬头看窗外的程序员
非常实用；tilda是内嵌桌面的terminal，cifs-utils则用于与windows共享
文件夹交互&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install chromium-browser xfce4-weather-plugin tilda cifs-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此一个基本上网功能完备的系统装好了，大约1.5个G。&lt;/p&gt;

&lt;h3 id=&quot;flash&quot;&gt;关于flash&lt;/h3&gt;

&lt;p&gt;chromium默认是没有flash player的，大约是安全方面的考量。但有些
视频网站还没有来得及完全转变html5，这时候就要装插件了。
debian如果是纯净安装的话，这个时候应当还没有python，而这又是
安装flash插件所必须的，所以得绕一下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install python-software-properties
echo &quot;deb http://ftp.dk.debian.org/debian wheezy-backports main contrib&quot; &amp;gt;&amp;gt; /etc/apt/sources.list.d/pepperflashplugin.list &amp;amp;&amp;amp; aptitude update
aptitude -t wheezy-backports install pepperflashplugin-nonfree
update-pepperflashplugin-nonfree --install
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-2&quot;&gt;中文化&lt;/h2&gt;
&lt;p&gt;之所以开这一章主要是针对默认系统语言没有选中文的安装。例如身在国外的兄弟
大约会选择当地语种作为系统语言，好处首先是方便与周围朋友交流：你
给老外看中文界面会吓死他们的；其次是方便使用非英文键盘布局。&lt;/p&gt;

&lt;p&gt;无非要装两样东西，一个中文字体，一个中文输入法。字体我用wqy的黑体
输入法我用fcitx + sunpinyin， 没有选googlepinyin因为我没找到怎么开启
词频调整功能，而sunpinyin是默认自动开启词频调整的。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install ttf-wqy-zenhei im-switch fcitx fcitx-config-gtk fcitx-sunpinyin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;装完之后浏览中文网页已经没有方框了，但还需要设置一下中文输入。
首先启动im-switch，选定fcitx作为默认输入框架。确认，退出xwindow，
再进来，启动fcitx。我一般会修改三个hotkey：切换输入法，默认Ctrl+Space，
显然与eclipse冲突，然后时前后翻页，我习惯用pageup和pagedown。重启fcitx
输入法应当已经可以正常使用了。
fcitx-sunpinyin的配置文件虽然原始设定system keymap，但很奇怪的是英文键盘。
需要手动修改到心仪的键盘布局，当然之后要重启以便修改被应用。&lt;/p&gt;

&lt;p&gt;第一篇教程搞定;-&amp;gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>试运行</title>
   <link href="http://username.github.io/demo/2014/12/12/"/>
   <updated>2014-12-12T00:00:00+01:00</updated>
   <id>http://username.github.io/demo/2014/12/</id>
   <content type="html">
&lt;p&gt;作为第一个语法尝试，我希望尽可能多的使用&lt;strong&gt;jeykll&lt;/strong&gt;的格式变化&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;使用&lt;code&gt;#&lt;/code&gt;号表示标题，一个为一级，二个为次级，一次类推&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;块引用是什么概念还不是很清楚，但是要用&lt;code&gt;&amp;gt;&lt;/code&gt;前界定，尝试一下&lt;br /&gt;
&amp;gt; 这是一个块引用&lt;br /&gt;
貌似这也是&lt;br /&gt;
现在尝试一下新方法&lt;br /&gt;
怎么样&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;现在到了引用之外了&lt;br /&gt;
* 这里是一下实例文件使用的一种方法：连续四个行首空格表示代码块&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;尝试尝试
再次尝试
结束
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果如何，事实证明，使用atom editor和真实jeykll bootstrap 的显示效果还是有差距的，为了方便网络发布，应当使用连续四个行首空格的方式表示代码块&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyll Introduction</title>
   <link href="http://username.github.io/lessons/2011/12/29/jekyll-introduction"/>
   <updated>2011-12-29T00:00:00+01:00</updated>
   <id>http://username.github.io/lessons/2011/12/29/jekyll-introduction</id>
   <content type="html">
&lt;p&gt;This Jekyll introduction will outline specifically  what Jekyll is and why you would want to use it.
Directly following the intro we’ll learn exactly &lt;em&gt;how&lt;/em&gt; Jekyll does what it does.&lt;/p&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;h3 id=&quot;what-is-jekyll&quot;&gt;What is Jekyll?&lt;/h3&gt;

&lt;p&gt;Jekyll is a parsing engine bundled as a ruby gem used to build static websites from
dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as “a simple, blog aware, static site generator”.&lt;/p&gt;

&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;

&lt;p&gt;This website is created with Jekyll. &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Sites&quot;&gt;Other Jekyll websites&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;what-does-jekyll-do&quot;&gt;What does Jekyll Do?&lt;/h3&gt;

&lt;p&gt;Jekyll is a ruby gem you install on your local system.
Once there you can call &lt;code&gt;jekyll --server&lt;/code&gt; on a directory and provided that directory
is setup in a way jekyll expects, it will do magic stuff like parse markdown/textile files,
compute categories, tags, permalinks, and construct your pages from layout templates and partials.&lt;/p&gt;

&lt;p&gt;Once parsed, Jekyll stores the result in a self-contained static &lt;code&gt;_site&lt;/code&gt; folder.
The intention here is that you can serve all contents in this folder statically from a plain static web-server.&lt;/p&gt;

&lt;p&gt;You can think of Jekyll as a normalish dynamic blog but rather than parsing content, templates, and tags
on each request, Jekyll does this once &lt;em&gt;beforehand&lt;/em&gt; and caches the &lt;em&gt;entire website&lt;/em&gt; in a folder for serving statically.&lt;/p&gt;

&lt;h3 id=&quot;jekyll-is-not-blogging-software&quot;&gt;Jekyll is Not Blogging Software&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Jekyll is a parsing engine.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jekyll does not come with any content nor does it have any templates or design elements.
This is a common source of confusion when getting started.
Jekyll does not come with anything you actually use or see on your website - you have to make it.&lt;/p&gt;

&lt;h3 id=&quot;why-should-i-care&quot;&gt;Why Should I Care?&lt;/h3&gt;

&lt;p&gt;Jekyll is very minimalistic and very efficient.
The most important thing to realize about Jekyll is that it creates a static representation of your website requiring only a static web-server.
Traditional dynamic blogs like Wordpress require a database and server-side code.
Heavily trafficked dynamic blogs must employ a caching layer that ultimately performs the same job Jekyll sets out to do; serve static content.&lt;/p&gt;

&lt;p&gt;Therefore if you like to keep things simple and you prefer the command-line over an admin panel UI then give Jekyll a try.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developers like Jekyll because we can write content like we write code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ability to write content in markdown or textile in your favorite text-editor.&lt;/li&gt;
  &lt;li&gt;Ability to write and preview your content via localhost.&lt;/li&gt;
  &lt;li&gt;No internet connection required.&lt;/li&gt;
  &lt;li&gt;Ability to publish via git.&lt;/li&gt;
  &lt;li&gt;Ability to host your blog on a static web-server.&lt;/li&gt;
  &lt;li&gt;Ability to host freely on GitHub Pages.&lt;/li&gt;
  &lt;li&gt;No database required.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;how-jekyll-works&quot;&gt;How Jekyll Works&lt;/h1&gt;

&lt;p&gt;The following is a complete but concise outline of exactly how Jekyll works.&lt;/p&gt;

&lt;p&gt;Be aware that core concepts are introduced in rapid succession without code examples.
This information is not intended to specifically teach you how to do anything, rather it
is intended to give you the &lt;em&gt;full picture&lt;/em&gt; relative to what is going on in Jekyll-world.&lt;/p&gt;

&lt;p&gt;Learning these core concepts should help you avoid common frustrations and ultimately
help you better understand the code examples contained throughout Jekyll-Bootstrap.&lt;/p&gt;

&lt;h2 id=&quot;initial-setup&quot;&gt;Initial Setup&lt;/h2&gt;

&lt;p&gt;After &lt;a href=&quot;/index.html#start-now&quot;&gt;installing jekyll&lt;/a&gt; you’ll need to format your website directory in a way jekyll expects.
Jekyll-bootstrap conveniently provides the base directory format.&lt;/p&gt;

&lt;h3 id=&quot;the-jekyll-application-base-format&quot;&gt;The Jekyll Application Base Format&lt;/h3&gt;

&lt;p&gt;Jekyll expects your website directory to be laid out like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
|-- _config.yml
|-- _includes
|-- _layouts
|   |-- default.html
|   |-- post.html
|-- _posts
|   |-- 2011-10-25-open-source-is-good.markdown
|   |-- 2011-04-26-hello-world.markdown
|-- _site
|-- index.html
|-- assets
    |-- css
        |-- style.css
    |-- javascripts
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;_config.yml&lt;/strong&gt;
  Stores configuration data.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;_includes&lt;/strong&gt;
  This folder is for partial views.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;_layouts&lt;/strong&gt;
  This folder is for the main templates your content will be inserted into.
  You can have different layouts for different pages or page sections.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;_posts&lt;/strong&gt;
  This folder contains your dynamic content/posts.
  the naming format is required to be &lt;code&gt;@YEAR-MONTH-DATE-title.MARKUP@&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;_site&lt;/strong&gt;
  This is where the generated site will be placed once Jekyll is done transforming it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;assets&lt;/strong&gt;
  This folder is not part of the standard jekyll structure.
  The assets folder represents &lt;em&gt;any generic&lt;/em&gt; folder you happen to create in your root directory.
  Directories and files not properly formatted for jekyll will be left untouched for you to serve normally.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(read more: &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Usage&quot;&gt;https://github.com/mojombo/jekyll/wiki/Usage&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;jekyll-configuration&quot;&gt;Jekyll Configuration&lt;/h3&gt;

&lt;p&gt;Jekyll supports various configuration options that are fully outlined here:
(&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Configuration&quot;&gt;https://github.com/mojombo/jekyll/wiki/Configuration&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;content-in-jekyll&quot;&gt;Content in Jekyll&lt;/h2&gt;

&lt;p&gt;Content in Jekyll is either a post or a page.
These content “objects” get inserted into one or more templates to build the final output for its respective static-page.&lt;/p&gt;

&lt;h3 id=&quot;posts-and-pages&quot;&gt;Posts and Pages&lt;/h3&gt;

&lt;p&gt;Both posts and pages should be written in markdown, textile, or HTML and may also contain Liquid templating syntax.
Both posts and pages can have meta-data assigned on a per-page basis such as title, url path, as well as arbitrary custom meta-data.&lt;/p&gt;

&lt;h3 id=&quot;working-with-posts&quot;&gt;Working With Posts&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Creating a Post&lt;/strong&gt;
Posts are created by properly formatting a file and placing it the &lt;code&gt;_posts&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formatting&lt;/strong&gt;
A post must have a valid filename in the form &lt;code&gt;YEAR-MONTH-DATE-title.MARKUP&lt;/code&gt; and be placed in the &lt;code&gt;_posts&lt;/code&gt; directory.
If the data format is invalid Jekyll will not recognize the file as a post. The date and title are automatically parsed from the filename of the post file.
Additionally, each file must have &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter&quot;&gt;YAML Front-Matter&lt;/a&gt; prepended to its content.
YAML Front-Matter is a valid YAML syntax specifying meta-data for the given file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Order&lt;/strong&gt;
Ordering is an important part of Jekyll but it is hard to specify a custom ordering strategy.
Only reverse chronological and chronological ordering is supported in Jekyll.&lt;/p&gt;

&lt;p&gt;Since the date is hard-coded into the filename format, to change the order, you must change the dates in the filenames.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;
Posts can have tags associated with them as part of their meta-data.
Tags may be placed on posts by providing them in the post’s YAML front matter.
You have access to the post-specific tags in the templates. These tags also get added to the sitewide collection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Categories&lt;/strong&gt;
Posts may be categorized by providing one or more categories in the YAML front matter.
Categories offer more significance over tags in that they can be reflected in the URL path to the given post.
Note categories in Jekyll work in a specific way.
If you define more than one category you are defining a category hierarchy “set”.
Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title :  Hello World
categories : [lessons, beginner]
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This defines the category hierarchy “lessons/beginner”. Note this is &lt;em&gt;one category&lt;/em&gt; node in Jekyll.
You won’t find “lessons” and “beginner” as two separate categories unless you define them elsewhere as singular categories.&lt;/p&gt;

&lt;h3 id=&quot;working-with-pages&quot;&gt;Working With Pages&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Creating a Page&lt;/strong&gt;
Pages are created by properly formatting a file and placing it anywhere in the root directory or subdirectories that do &lt;em&gt;not&lt;/em&gt; start with an underscore.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formatting&lt;/strong&gt;
In order to register as a Jekyll page the file must contain &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter&quot;&gt;YAML Front-Matter&lt;/a&gt;.
Registering a page means 1) that Jekyll will process the page and 2) that the page object will be available in the &lt;code&gt;site.pages&lt;/code&gt; array for inclusion into your templates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Categories and Tags&lt;/strong&gt;
Pages do not compute categories nor tags so defining them will have no effect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sub-Directories&lt;/strong&gt;
If pages are defined in sub-directories, the path to the page will be reflected in the url.
Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
|-- people
    |-- bob
        |-- essay.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This page will be available at &lt;code&gt;http://yourdomain.com/people/bob/essay.html&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recommended Pages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;index.html&lt;/strong&gt;
You will always want to define the root index.html page as this will display on your root URL.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;404.html&lt;/strong&gt;
Create a root 404.html page and GitHub Pages will serve it as your 404 response.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;sitemap.html&lt;/strong&gt;
Generating a sitemap is good practice for SEO.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;about.html&lt;/strong&gt;
A nice about page is easy to do and gives the human perspective to your website.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;templates-in-jekyll&quot;&gt;Templates in Jekyll&lt;/h2&gt;

&lt;p&gt;Templates are used to contain a page’s or post’s content.
All templates have access to a global site object variable: &lt;code&gt;site&lt;/code&gt; as well as a page object variable: &lt;code&gt;page&lt;/code&gt;.
The site variable holds all accessible content and metadata relative to the site.
The page variable holds accessible data for the given page or post being rendered at that point.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a Template&lt;/strong&gt;
Templates are created by properly formatting a file and placing it in the &lt;code&gt;_layouts&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formatting&lt;/strong&gt;
Templates should be coded in HTML and contain YAML Front Matter.
All templates can contain Liquid code to work with your site’s data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rending Page/Post Content in a Template&lt;/strong&gt;
There is a special variable in all templates named : &lt;code&gt;content&lt;/code&gt;.
The &lt;code&gt;content&lt;/code&gt; variable holds the page/post content including any sub-template content previously defined.
Render the content variable wherever you want your main content to be injected into your template:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;...
&amp;lt;body&amp;gt;
  &amp;lt;div id=&quot;sidebar&quot;&amp;gt; ... &amp;lt;/div&amp;gt;
  &amp;lt;div id=&quot;main&quot;&amp;gt;
    &amp;#123;{content}&amp;#125;
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
...&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;sub-templates&quot;&gt;Sub-Templates&lt;/h3&gt;

&lt;p&gt;Sub-templates are exactly templates with the only difference being they
define another “root” layout/template within their YAML Front Matter.
This essentially means a template will render inside of another template.&lt;/p&gt;

&lt;h3 id=&quot;includes&quot;&gt;Includes&lt;/h3&gt;
&lt;p&gt;In Jekyll you can define include files by placing them in the &lt;code&gt;_includes&lt;/code&gt; folder.
Includes are NOT templates, rather they are just code snippets that get included into templates.
In this way, you can treat the code inside includes as if it was native to the parent template.&lt;/p&gt;

&lt;p&gt;Any valid template code may be used in includes.&lt;/p&gt;

&lt;h2 id=&quot;using-liquid-for-templating&quot;&gt;Using Liquid for Templating&lt;/h2&gt;

&lt;p&gt;Templating is perhaps the most confusing and frustrating part of Jekyll.
This is mainly due to the fact that Jekyll templates must use the Liquid Templating Language.&lt;/p&gt;

&lt;h3 id=&quot;what-is-liquid&quot;&gt;What is Liquid?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Shopify/liquid&quot;&gt;Liquid&lt;/a&gt; is a secure templating language developed by &lt;a href=&quot;http://shopify.com&quot;&gt;Shopify&lt;/a&gt;.
Liquid is designed for end-users to be able to execute logic within template files
without imposing any security risk on the hosting server.&lt;/p&gt;

&lt;p&gt;Jekyll uses Liquid to generate the post content within the final page layout structure and as the primary interface for working with
your site and post/page data.&lt;/p&gt;

&lt;h3 id=&quot;why-do-we-have-to-use-liquid&quot;&gt;Why Do We Have to Use Liquid?&lt;/h3&gt;

&lt;p&gt;GitHub uses Jekyll to power &lt;a href=&quot;http://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;.
GitHub cannot afford to run arbitrary code on their servers so they lock developers down via Liquid.&lt;/p&gt;

&lt;h3 id=&quot;liquid-is-not-programmer-friendly&quot;&gt;Liquid is Not Programmer-Friendly.&lt;/h3&gt;

&lt;p&gt;The short story is liquid is not real code and its not intended to execute real code.
The point being you can’t do jackshit in liquid that hasn’t been allowed explicitly by the implementation.
What’s more you can only access data-structures that have been explicitly passed to the template.&lt;/p&gt;

&lt;p&gt;In Jekyll’s case it is not possible to alter what is passed to Liquid without hacking the gem or running custom plugins.
Both of which cannot be supported by GitHub Pages.&lt;/p&gt;

&lt;p&gt;As a programmer - this is very frustrating.&lt;/p&gt;

&lt;p&gt;But rather than look a gift horse in the mouth we are going to
suck it up and view it as an opportunity to work around limitations and adopt client-side solutions when possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Aside&lt;/strong&gt;
My personal stance is to not invest time trying to hack liquid. It’s really unnecessary
&lt;em&gt;from a programmer’s&lt;/em&gt; perspective. That is to say if you have the ability to run custom plugins (i.e. run arbitrary ruby code)
you are better off sticking with ruby. Toward that end I’ve built &lt;a href=&quot;http://github.com/plusjade/mustache-with-jekyll&quot;&gt;Mustache-with-Jekyll&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;static-assets&quot;&gt;Static Assets&lt;/h2&gt;

&lt;p&gt;Static assets are any file in the root or non-underscored subfolders that are not pages.
That is they have no valid YAML Front Matter and are thus not treated as Jekyll Pages.&lt;/p&gt;

&lt;p&gt;Static assets should be used for images, css, and javascript files.&lt;/p&gt;

&lt;h2 id=&quot;how-jekyll-parses-files&quot;&gt;How Jekyll Parses Files&lt;/h2&gt;

&lt;p&gt;Remember Jekyll is a processing engine. There are two main types of parsing in Jekyll.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Content parsing.&lt;/strong&gt;
  This is done with textile or markdown.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Template parsing.&lt;/strong&gt;
This is done with the liquid templating language.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And thus there are two main types of file formats needed for this parsing.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Post and Page files.&lt;/strong&gt;
All content in Jekyll is either a post or a page so valid posts and pages are parsed with markdown or textile.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Template files.&lt;/strong&gt;
  These files go in &lt;code&gt;_layouts&lt;/code&gt; folder and contain your blogs &lt;strong&gt;templates&lt;/strong&gt;. They should be made in HTML with the help of Liquid syntax.
  Since include files are simply injected into templates they are essentially parsed as if they were native to the template.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Arbitrary files and folders.&lt;/strong&gt;
Files that &lt;em&gt;are not&lt;/em&gt; valid pages are treated as static content and pass through
Jekyll untouched and reside on your blog in the exact structure and format they originally existed in.&lt;/p&gt;

&lt;h3 id=&quot;formatting-files-for-parsing&quot;&gt;Formatting Files for Parsing.&lt;/h3&gt;

&lt;p&gt;We’ve outlined the need for valid formatting using &lt;strong&gt;YAML Front Matter&lt;/strong&gt;.
Templates, posts, and pages all need to provide valid YAML Front Matter even if the Matter is empty.
This is the only way Jekyll knows you want the file processed.&lt;/p&gt;

&lt;p&gt;YAML Front Matter must be prepended to the top of template/post/page files:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
category : pages
tags : [how-to, jekyll]
---

... contents ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Three hyphens on a new line start the Front-Matter block and three hyphens on a new line end the block.
The data inside the block must be valid YAML.&lt;/p&gt;

&lt;p&gt;Configuration parameters for YAML Front-Matter is outlined here:
&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter&quot;&gt;A comprehensive explanation of YAML Front Matter&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;defining-layouts-for-posts-and-templates-parsing&quot;&gt;Defining Layouts for Posts and Templates Parsing.&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;layout&lt;/code&gt; parameter in the YAML Front Matter defines the template file for which the given post or template should be injected into.
If a template file specifies its own layout, it is effectively being used as a &lt;code&gt;sub-template.&lt;/code&gt;
That is to say loading a post file into a template file that refers to another template file with work in the way you’d expect; as a nested sub-template.&lt;/p&gt;

&lt;h2 id=&quot;how-jekyll-generates-the-final-static-files&quot;&gt;How Jekyll Generates the Final Static Files.&lt;/h2&gt;

&lt;p&gt;Ultimately, Jekyll’s job is to generate a static representation of your website.
The following is an outline of how that’s done:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Jekyll collects data.&lt;/strong&gt;
  Jekyll scans the posts directory and collects all posts files as post objects. It then scans the layout assets and collects those and finally scans other directories in search of pages.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Jekyll computes data.&lt;/strong&gt;
  Jekyll takes these objects, computes metadata (permalinks, tags, categories, titles, dates) from them and constructs one
  big &lt;code&gt;site&lt;/code&gt; object that holds all the posts, pages, layouts, and respective metadata.
  At this stage your site is one big computed ruby object.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Jekyll liquifies posts and templates.&lt;/strong&gt;
  Next jekyll loops through each post file and converts (through markdown or textile) and &lt;strong&gt;liquifies&lt;/strong&gt; the post inside of its respective layout(s).
  Once the post is parsed and liquified inside the the proper layout structure, the layout itself is “liquified”.
 &lt;strong&gt;Liquification&lt;/strong&gt; is defined as follows: Jekyll initiates a Liquid template, and passes a simpler hash representation of the ruby site object as well as a simpler
  hash representation of the ruby post object. These simplified data structures are what you have access to in the templates.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Jekyll generates output.&lt;/strong&gt;
 Finally the liquid templates are “rendered”, thereby processing any liquid syntax provided in the templates
 and saving the final, static representation of the file.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Notes.&lt;/strong&gt;
Because Jekyll computes the entire site in one fell swoop, each template is given access to
a global &lt;code&gt;site&lt;/code&gt; hash that contains useful data. It is this data that you’ll iterate through and format
using the Liquid tags and filters in order to render it onto a given page.&lt;/p&gt;

&lt;p&gt;Remember, in Jekyll you are an end-user. Your API has only two components:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The manner in which you setup your directory.&lt;/li&gt;
  &lt;li&gt;The liquid syntax and variables passed into the liquid templates.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All the data objects available to you in the templates via Liquid are outlined in the &lt;strong&gt;API Section&lt;/strong&gt; of Jekyll-Bootstrap.
You can also read the original documentation here: &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Template-Data&quot;&gt;https://github.com/mojombo/jekyll/wiki/Template-Data&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I hope this paints a clearer picture of what Jekyll is doing and why it works the way it does.
As noted, our main programming constraint is the fact that our API is limited to what is accessible via Liquid and Liquid only.&lt;/p&gt;

&lt;p&gt;Jekyll-bootstrap is intended to provide helper methods and strategies aimed at making it more intuitive and easier to work with Jekyll =)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you&lt;/strong&gt; for reading this far.&lt;/p&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;Please take a look at []()
or jump right into &lt;a href=&quot;&quot;&gt;Usage&lt;/a&gt; if you’d like.&lt;/p&gt;
</content>
 </entry>
 
 
</feed>
